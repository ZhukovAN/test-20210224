# This is a projectmanagement.json file converted with https://editor.swagger.io/ and with some fixes
# This is a projectmanagement.json file converted with https://editor.swagger.io/ and with some fixes
#
# TODO: Fix "Empty operationId found for path" issue to avoid bulk method names generation
# TODO: Fix "Multiple schemas found in the OAS 'content' section, returning only the first one"

openapi: 3.0.1
info:
  title: projectManagement
  version: "3.6"
servers:
  - url: https://ptai.domain.org:443/
security:
  - Bearer: []
paths:
  /api/Configs/yaraRules:
    get:
      tags:
        - Configs
      summary: Get yara rules
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
        '401':
          description: Unauthorized
    put:
      tags:
        - Configs
      summary: Save yara rules
      requestBody:
        description: all yara rules
        content:
          application/json:
            schema:
              type: string
              description: all yara rules
              nullable: true
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
  /api/Configs/sastRules:
    get:
      tags:
        - Configs
      summary: Get sast rules
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: object
                properties:
                  None:
                    type: string
                  Binary:
                    type: string
                  Configuration:
                    type: string
                  Fingerprint:
                    type: string
                  Java:
                    type: string
                  CSharp:
                    type: string
                  PHP:
                    type: string
                  PmTaint:
                    type: string
                  BlackBox:
                    type: string
                  JavaScript:
                    type: string
                  DependencyCheck:
                    type: string
                additionalProperties: false
            application/json:
              schema:
                type: object
                properties:
                  None:
                    type: string
                  Binary:
                    type: string
                  Configuration:
                    type: string
                  Fingerprint:
                    type: string
                  Java:
                    type: string
                  CSharp:
                    type: string
                  PHP:
                    type: string
                  PmTaint:
                    type: string
                  BlackBox:
                    type: string
                  JavaScript:
                    type: string
                  DependencyCheck:
                    type: string
                additionalProperties: false
            text/json:
              schema:
                type: object
                properties:
                  None:
                    type: string
                  Binary:
                    type: string
                  Configuration:
                    type: string
                  Fingerprint:
                    type: string
                  Java:
                    type: string
                  CSharp:
                    type: string
                  PHP:
                    type: string
                  PmTaint:
                    type: string
                  BlackBox:
                    type: string
                  JavaScript:
                    type: string
                  DependencyCheck:
                    type: string
                additionalProperties: false
            application/x-msgpack:
              schema:
                type: object
                properties:
                  None:
                    type: string
                  Binary:
                    type: string
                  Configuration:
                    type: string
                  Fingerprint:
                    type: string
                  Java:
                    type: string
                  CSharp:
                    type: string
                  PHP:
                    type: string
                  PmTaint:
                    type: string
                  BlackBox:
                    type: string
                  JavaScript:
                    type: string
                  DependencyCheck:
                    type: string
                additionalProperties: false
            application/msgpack:
              schema:
                type: object
                properties:
                  None:
                    type: string
                  Binary:
                    type: string
                  Configuration:
                    type: string
                  Fingerprint:
                    type: string
                  Java:
                    type: string
                  CSharp:
                    type: string
                  PHP:
                    type: string
                  PmTaint:
                    type: string
                  BlackBox:
                    type: string
                  JavaScript:
                    type: string
                  DependencyCheck:
                    type: string
                additionalProperties: false
        '401':
          description: Unauthorized
  '/api/Configs/sastRules/{type}':
    get:
      tags:
        - Configs
      summary: Get sast rules
      parameters:
        - name: type
          in: path
          description: Scan app type
          required: true
          schema:
            $ref: '#/components/schemas/ScanAppType'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
        '401':
          description: Unauthorized
    put:
      tags:
        - Configs
      summary: Save sast rules
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ScanAppType'
      requestBody:
        description: all sast rules
        content:
          application/json:
            schema:
              type: string
              description: all sast rules
              nullable: true
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
  /api/Configs/pmPatterns:
    get:
      tags:
        - Configs
      summary: Get pattern matching patterns
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PmPattern'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PmPattern'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PmPattern'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PmPattern'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PmPattern'
        '401':
          description: Unauthorized
  /api/License:
    get:
      tags:
        - License
      summary: Get information about current license
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EnterpriseLicenseData'
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseLicenseData'
            text/json:
              schema:
                $ref: '#/components/schemas/EnterpriseLicenseData'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/EnterpriseLicenseData'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/EnterpriseLicenseData'
        '401':
          description: Unauthorized
    put:
      tags:
        - License
      summary: Update license
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  description: ''
                  format: binary
                  nullable: true
            encoding:
              file:
                style: form
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
  /api/License/fingerprint:
    get:
      tags:
        - License
      summary: Get server fingerprint
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
        '401':
          description: Unauthorized
  /api/Projects:
    get:
      tags:
        - Projects
      summary: Get projects
      parameters:
        - name: withoutDetails
          in: query
          description: 'true only for plugins, not for client applications'
          schema:
            type: boolean
            description: 'true only for plugins, not for client applications'
            default: false
      responses:
        '200':
          description: Success
          # V.3.6: Had to explicitly add content type as there's empty one in v.3.6 OpenAPI description
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      tags:
        - Projects
      summary: Create project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Project'
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            text/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Project'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/Project'
  '/api/Projects/{projectId}':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Project'
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            text/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/Project'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/Project'
    delete:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
    put:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
            application/msgpack:
              schema:
                type: boolean
  '/api/Projects/light/{name}':
    get:
      tags:
        - Projects
      summary: Get project by name without details
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProjectLight'
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectLight'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectLight'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProjectLight'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProjectLight'
        '401':
          description: Unauthorized
  /api/Projects/count:
    get:
      tags:
        - Projects
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
            application/x-msgpack:
              schema:
                type: integer
                format: int32
            application/msgpack:
              schema:
                type: integer
                format: int32
  '/api/Projects/{projectId}/name':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
    put:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
            application/msgpack:
              schema:
                type: boolean
  /api/Projects/correctNameForNewProject:
    get:
      tags:
        - Projects
      parameters:
        - name: initialName
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
  '/api/Projects/{name}/exists':
    get:
      tags:
        - Projects
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
            application/msgpack:
              schema:
                type: boolean
  '/api/Projects/{projectId}/isNameAvailable':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
            application/msgpack:
              schema:
                type: boolean
  '/api/Projects/{projectId}/scanResults':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: authScope
          in: query
          schema:
            $ref: '#/components/schemas/AuthScopeType'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanResult'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanResult'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanResult'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanResult'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanResult'
  '/api/Projects/{projectId}/scanResults/{scanResultId}/issues':
    get:
      tags:
        - Projects
      summary: Read issues and  descriptions and metadatas to stream
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanResultId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: localeId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/octet-stream:
              schema:
                # V.3.6: Had to replace as issues report may be very big, so we need rather to store it in the file than to put to memory
                # $ref: '#/components/schemas/IssuesModel'
                type: string
                format: binary
        '401':
          description: Unauthorized
  '/api/Projects/{projectId}/filePatterns':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
            application/x-msgpack:
              schema:
                type: array
                items:
                  type: string
            application/msgpack:
              schema:
                type: array
                items:
                  type: string
    put:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
            application/msgpack:
              schema:
                type: boolean
  '/api/Projects/{projectId}/scanSettings':
    put:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        # V.3.6: Had to replace IScanSettings with manually added V36ScanSettings
        content:
          application/json:
            schema:
              # $ref: '#/components/schemas/IScanSettings'
              $ref: '#/components/schemas/V36ScanSettings'
      responses:
        '200':
          description: Success
  '/api/Projects/{projectId}/scanSettings/{scanSettingsId}':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanSettingsId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          # V.3.6: Had to replace IScanSettings with manually added V36ScanSettings
          description: Success
          content:
            text/plain:
              schema:
                # $ref: '#/components/schemas/IScanSettings'
                $ref: '#/components/schemas/V36ScanSettings'
            application/json:
              schema:
                # $ref: '#/components/schemas/IScanSettings'
                $ref: '#/components/schemas/V36ScanSettings'
            text/json:
              schema:
                # $ref: '#/components/schemas/IScanSettings'
                $ref: '#/components/schemas/V36ScanSettings'
            application/x-msgpack:
              schema:
                # $ref: '#/components/schemas/IScanSettings'
                $ref: '#/components/schemas/V36ScanSettings'
            application/msgpack:
              schema:
                # $ref: '#/components/schemas/IScanSettings'
                $ref: '#/components/schemas/V36ScanSettings'
  '/api/Projects/{projectId}/policiesRules':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
    put:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
      responses:
        '200':
          description: Success
  '/api/Projects/{projectId}/scanResults/{scanResultId}':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanResultId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ScanResult'
    delete:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanResultId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: deleteGroup
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
  '/api/Projects/{projectId}/scanResults/last':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ScanResult'
  '/api/Projects/{projectId}/scanResults/{scanResultId}/previous':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanResultId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ScanResult'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ScanResult'
  '/api/Projects/{projectId}/scanResults/{scanResultId}/vfs':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanResultId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  '/api/Projects/{projectId}/scanResults/{scanResultId}/vfs/exists':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanResultId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/x-msgpack:
              schema:
                type: boolean
            application/msgpack:
              schema:
                type: boolean
  '/api/Projects/{projectId}/issues/{issueId}/exploit':
    put:
      tags:
        - Projects
      summary: Обновить exploit уязвимости
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: issueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueExploitModel'
      responses:
        '401':
          description: Unauthorized
  '/api/Projects/{projectId}/issues/{issueId}/state':
    put:
      tags:
        - Projects
      summary: Изменить статус узявимости
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: issueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeIssueApprovalStateModel'
      responses:
        '401':
          description: Unauthorized
  '/api/Projects/{projectId}/issues/{issueId}/favorite':
    put:
      tags:
        - Projects
      summary: Изменить признак is favorite у уязвимости
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: issueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeIssueIsFavoriteModel'
      responses:
        '401':
          description: Unauthorized
  '/api/Projects/{projectId}/issues/state':
    put:
      tags:
        - Projects
      summary: Изменить статус подтверждения у уязвимостей
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: 'IssuesStates - dictionary, key is issues id and value is new state'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeIssuesApprovalStateModel'
      responses:
        '401':
          description: Unauthorized
  '/api/Projects/{projectId}/scanResults/{scanResultId}/errors':
    put:
      tags:
        - Projects
      summary: Обновить ошибки сканирования
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanResultId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ScanError'
              nullable: true
      responses:
        '200':
          description: Success
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: scanResultId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanError'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanError'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanError'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanError'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScanError'
  '/api/Projects/{projectId}/it/ticketSettings':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
    post:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
      responses:
        '200':
          description: Success
    put:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
      responses:
        '200':
          description: Success
  '/api/Projects/{projectId}/it/ticketSettings/default':
    get:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
  '/api/Projects/{projectId}/it/ticketSettings/{id}':
    get:
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/json:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            text/json:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/IssueTrackerIntegrationSettings'
    delete:
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  '/api/Projects/{projectId}/it/links/{id}':
    post:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entityId
          in: query
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketLink'
      responses:
        '200':
          description: Success
  '/api/Projects/{projectId}/it/links/{id}/unlink':
    put:
      tags:
        - Projects
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: entityId
          in: query
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketLink'
      responses:
        '200':
          description: Success
  /api/Projects/stages:
    get:
      tags:
        - Projects
      summary: Get project stages
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectStage'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectStage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectStage'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectStage'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectStage'
        '401':
          description: Unauthorized
  /api/Projects/activeScans:
    get:
      tags:
        - Projects
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveScanModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveScanModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveScanModel'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveScanModel'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ActiveScanModel'
  '/api/Projects/{projectId}/issues/{issueId}/resources':
    get:
      tags:
        - Projects
      summary: Get issue`s descriptions and metadatas
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: issueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: localeId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IssueResourcesModel'
            application/json:
              schema:
                $ref: '#/components/schemas/IssueResourcesModel'
            text/json:
              schema:
                $ref: '#/components/schemas/IssueResourcesModel'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/IssueResourcesModel'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/IssueResourcesModel'
        '401':
          description: Unauthorized
  /api/Reports/templates:
    get:
      tags:
        - Reports
      summary: Get all report`s templates
      parameters:
        - name: localeId
          in: query
          schema:
            type: string
            nullable: true
        - name: withContent
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportTemplateModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportTemplateModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportTemplateModel'
            application/x-msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportTemplateModel'
            application/msgpack:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReportTemplateModel'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Reports
      summary: Create report template
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplateUpsertModel'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Reports/templates/{id}':
    get:
      tags:
        - Reports
      summary: "Get report template by id\r\n<param name=\"id\">Report`s id</param>"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: localeId
          in: query
          schema:
            type: string
            nullable: true
        - name: needAddCss
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Reports
      summary: Update report template
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplateUpsertModel'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Reports
      summary: "Delete report template by id\r\n<param name=\"id\">Report`s id</param>"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Reports/templates/{type}':
    get:
      tags:
        - Reports
      summary: "Get report template by id\r\n<param name=\"id\">Report`s id</param>"
      operationId: TemplateByType
      parameters:
        - name: type
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ReportType'
        - name: localeId
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ReportTemplateModel'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Reports/templates/check:
    post:
      tags:
        - Reports
      summary: Check template on errors. Pass template text in body
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TemplateValidationResult'
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateValidationResult'
            text/json:
              schema:
                $ref: '#/components/schemas/TemplateValidationResult'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/TemplateValidationResult'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/TemplateValidationResult'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Reports/generate:
    post:
      tags:
        - Reports
      summary: "Generate report.\r\n <param name=\"model\">Report`s generate model (settings, templates...)</param>"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportGenerateModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/File'
            application/json:
              schema:
                $ref: '#/components/schemas/File'
            text/json:
              schema:
                $ref: '#/components/schemas/File'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/File'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/File'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Reports/generateWafPatch:
    post:
      tags:
        - Reports
      summary: "Generate  waf patch report\r\n <param name=\"model\">Report`s generate model (settings, templates...)</param>"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WafPatchGenerateModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/File'
            application/json:
              schema:
                $ref: '#/components/schemas/File'
            text/json:
              schema:
                $ref: '#/components/schemas/File'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/File'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/File'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Reports/preview:
    post:
      tags:
        - Reports
      summary: Preview report
      parameters:
        - name: localeId
          in: query
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTemplateModel'
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Reports/parameters:
    get:
      tags:
        - Reports
      summary: Get report parametrs for current user
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
            application/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ReportTemplate'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Reports
      summary: "Save report parametrs for current user\r\n<param name=\"model\">Report parameters model</param>"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserReportParameters'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/File'
            application/json:
              schema:
                $ref: '#/components/schemas/File'
            text/json:
              schema:
                $ref: '#/components/schemas/File'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/File'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/File'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/stat/topVulnProjects:
    post:
      tags:
        - Statistic
      summary: Get top projects with high vulnerabilities statistic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopVulnerabilityProjects'
      responses:
        '200':
          description: Returns projects with high vulnerabilities statistic
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
  /api/stat/vulnResultsProjects:
    post:
      tags:
        - Statistic
      summary: Get projects with high vulnerabilities statistic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopVulnerabilityProjects'
      responses:
        '200':
          description: Returns projects with high vulnerabilities statistic
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
  /api/stat/vulnTimeDistrib:
    post:
      tags:
        - Statistic
      summary: Get vulnerabilities time distribution statistic
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnTimeDistrib'
      responses:
        '200':
          description: Returns vulnerabilities time distribution statistic
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
  /api/stat/vulnState:
    get:
      tags:
        - Statistic
      summary: Get vulnerabilities time distribution statistic
      responses:
        '200':
          description: Returns vulnerabilities time distribution statistic
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
  /api/stat/issueStatisticGroups:
    post:
      tags:
        - Statistic
      summary: Get issue statistic groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueStatisticGroup'
      responses:
        '200':
          description: Returns issue statistic groups
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/x-msgpack:
              schema:
                type: string
            application/msgpack:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/x-msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
            application/msgpack:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
components:
  schemas:
    ScanAppType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
      x-enum-varnames:
        - None
        - Binary
        - Configuration
        - Fingerprint
        - Java
        - CSharp
        - PHP
        - PmTaint
        - BlackBox
        - JavaScript
        - DependencyCheck
      type: integer
    ProgrammingLanguages:
      # V.3.6: EnterpriseLicenseData uses integer representation of ProgrammingLanguage, so we need to add x-enum-varnames
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
      x-enum-varnames:
        - None
        - VB
        - DotNet
        - CSharp
        - Php
        - Java
        - Html
        - JavaScript
        - SandBox
        - Binary
        - PlSql
        - TSql
        - MySql
        - Aspx
        - C
        - CPlusPlus
        - ObjectiveC
        - Swift
        - Python
        - Go
        - Kotlin
      type: integer
    DataFormat:
      enum:
        - Json
        - Dsl
      type: string
    PmPattern:
      type: object
      properties:
        key:
          type: string
          nullable: true
        pattern:
          type: string
          nullable: true
        filenameWildcard:
          type: string
          nullable: true
        programmingLanguages:
          $ref: '#/components/schemas/ProgrammingLanguages'
        dataFormat:
          $ref: '#/components/schemas/DataFormat'
      additionalProperties: false
    ProgrammingLanguage:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
      x-enum-varnames:
        - DotNet
        - Php
        - Java
        - Html
        - JavaScript
        - All
        - SandBox
        - Binary
        - PlSql
        - TSql
        - Aspx
        - C
        - CPlusPlus
        - ObjectiveC
        - Swift
        - MySql
        - Python
        - CSharp
        - VB
        - Go
        - Kotlin
        - None
      type: string
    EnterpriseLicenseData:
      type: object
      properties:
        key:
          type: string
          nullable: true
        circuit:
          type: string
          nullable: true
        currentDate:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        limitProjects:
          type: integer
          format: int32
        languages:
          type: array
          items:
            $ref: '#/components/schemas/ProgrammingLanguage'
          nullable: true
        isBlackBoxDisabled:
          type: boolean
        isValid:
          type: boolean
        licenseNumber:
          type: integer
          format: int32
      additionalProperties: false
    RepositoryType:
      enum:
        - None
        - Git
        - TFS
      type: string
    SourceControlCredentalsType:
      enum:
        - None
        - Anonymous
        - Password
        - AuthenticationToken
        - SshKeys
      type: string
    SourceControlSettings:
      type: object
      properties:
        repositoryType:
          $ref: '#/components/schemas/RepositoryType'
        repositoryUrl:
          type: string
          nullable: true
        checkoutDir:
          type: string
          nullable: true
        sourceControlCredentalsType:
          $ref: '#/components/schemas/SourceControlCredentalsType'
        user:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        catalog:
          type: string
          nullable: true
        project:
          type: string
          nullable: true
        branch:
          type: string
          nullable: true
        publicSSHKey:
          type: string
          nullable: true
        privateSSHKey:
          type: string
          nullable: true
        includeSubmodules:
          type: boolean
        updateSourcesBeforeScan:
          type: boolean
        useProxy:
          type: boolean
        credentialsId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    ISourceScanSettings:
      type: object
      properties:
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    JavaVersions:
      # V.3.6: Needed to fix that as API returns enum as integer instead of string
      enum:
        - 0
        - 1
      x-enum-varnames:
        - v1_8
        - v1_11
      type: integer
    IJavaSettings:
      type: object
      properties:
        javaParameters:
          type: string
          nullable: true
        javaVersion:
          $ref: '#/components/schemas/JavaVersions'
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    DotNetProjectType:
      # V.3.6: Had to add x-enum-varnames as API returns projectType as an integer value
      enum:
        - 0
        - 1
        - 2
      x-enum-varnames:
        - None
        - Solution
        - WebSite
      type: integer
    ICSharpSettings:
      type: object
      properties:
        projectType:
          $ref: '#/components/schemas/DotNetProjectType'
        solutionFile:
          type: string
          nullable: true
        webSiteFolder:
          type: string
          nullable: true
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    IJavaScriptSettings:
      type: object
      properties:
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    IPhpSettings:
      type: object
      properties:
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    IBinarySettings:
      type: object
      properties:
        isUseIssueScan:
          type: boolean
        isUseTaintScan:
          type: boolean
        isUsePatternmatchingScan:
          type: boolean
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    IPmTaintSettings:
      type: object
      properties:
        disabledPatterns:
          type: array
          items:
            type: string
          nullable: true
        enabledPatterns:
          type: array
          items:
            type: string
          nullable: true
        usePmAnalysis:
          type: boolean
          nullable: true
        useTaintAnalysis:
          type: boolean
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    IConfigSettings:
      type: object
      properties:
        configurationFiles:
          type: array
          items:
            type: string
          nullable: true
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    IFingerprintSettings:
      type: object
      properties:
        customYaraRules:
          type: string
          nullable: true
        useDefaultFingerprints:
          type: boolean
        useCustomYaraRules:
          type: boolean
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    IDependencyCheckSettings:
      type: object
      properties:
        isDependencyCheckAutoUpdateEnabled:
          type: boolean
        dependencyCheckAutoUpdateBaseUrl:
          type: string
          nullable: true
        dependencyCheckAutoUpdateModifiedUrl:
          type: string
          nullable: true
        dependencyCheckDataBaseFolder:
          type: string
          nullable: true
        dependencyCheckAutoUpdateRetireJsUrl:
          type: string
          nullable: true
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    BlackBoxScanLevel:
      # V.3.6: Need to add x-enum-varnames as API returns scanLevel as integer
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enum-varnames:
        - None
        - Fast
        - Normal
        - Full
      type: integer
    ScanScope:
      # V.3.6: Need to add x-enum-varnames as API returns scanScope as integer
      enum:
        - 0
        - 1
        - 2
      x-enum-varnames:
        - Folder
        - Domain
        - Path
      type: integer
    AuthType:
      # V.3.6: Need to add x-enum-varnames as API returns authType as integer
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enum-varnames:
        - Form
        - Http
        - None
        - RawCookie
      type: integer
    MappedAuthenticationObject:
      type: object
      properties:
        name:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        regexp:
          type: string
          nullable: true
        is_regexp:
          type: boolean
      additionalProperties: false
    AuthenticationCredentials:
      type: object
      properties:
        cookie:
          type: string
          nullable: true
        cookies:
          type: array
          items:
            type: array
            items:
              type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AuthType'
        login:
          $ref: '#/components/schemas/MappedAuthenticationObject'
        password:
          $ref: '#/components/schemas/MappedAuthenticationObject'
        credentials_id:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    AuthenticationItem:
      type: object
      properties:
        domain:
          type: string
          nullable: true
        credentials:
          $ref: '#/components/schemas/AuthenticationCredentials'
        test_url:
          type: string
          nullable: true
        form_url:
          type: string
          nullable: true
        form_xpath:
          type: string
          nullable: true
        regexp_of_success:
          type: string
          nullable: true
      additionalProperties: false
    BlackBoxAuthentication:
      type: object
      properties:
        auth_item:
          $ref: '#/components/schemas/AuthenticationItem'
      additionalProperties: false
    ProxyType:
      # V.3.6: Had to add x-enum-varnames as API returns projectType as an integer value
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enum-varnames:
        - Http
        - HttpNoConnect
        - Socks4
        - Socks5
      type: integer
    BlackBoxProxySettings:
      type: object
      properties:
        isEnabled:
          type: boolean
        host:
          type: string
          nullable: true
        port:
          type: integer
          format: int32
          nullable: true
        type:
          $ref: '#/components/schemas/ProxyType'
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        credentialsId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    IBlackBoxSettings:
      type: object
      properties:
        level:
          $ref: '#/components/schemas/BlackBoxScanLevel'
        scanScope:
          $ref: '#/components/schemas/ScanScope'
        autocheckSite:
          type: string
          nullable: true
        autocheckCustomHeaders:
          type: array
          items:
            type: array
            items:
              type: string
          nullable: true
        customHeaders:
          type: array
          items:
            type: array
            items:
              type: string
          nullable: true
        authentication:
          $ref: '#/components/schemas/BlackBoxAuthentication'
        autocheckAuthentication:
          $ref: '#/components/schemas/BlackBoxAuthentication'
        proxySettings:
          $ref: '#/components/schemas/BlackBoxProxySettings'
        autocheckProxySettings:
          $ref: '#/components/schemas/BlackBoxProxySettings'
        configurationPath:
          type: string
          nullable: true
        bindAddress:
          type: string
          nullable: true
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    ICommonSettings:
      type: object
      properties:
        scope:
          type: string
          nullable: true
        programmingLanguage:
          $ref: '#/components/schemas/ProgrammingLanguage'
        scanAppType:
          $ref: '#/components/schemas/ScanAppType'
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
      additionalProperties: false
    ReportMailSenderParameters:
      type: object
      properties:
        smtpServerAddress:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        useDefaultSettings:
          type: boolean
        emailRecipients:
          type: string
          nullable: true
        enableSsl:
          type: boolean
        subject:
          type: string
          nullable: true
        considerCertificateErrors:
          type: boolean
        senderEmail:
          type: string
          nullable: true
        credentialsId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    IScanSettings:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          nullable: true
        source:
          $ref: '#/components/schemas/ISourceScanSettings'
        java:
          $ref: '#/components/schemas/IJavaSettings'
        dotNet:
          $ref: '#/components/schemas/ICSharpSettings'
        javaScript:
          $ref: '#/components/schemas/IJavaScriptSettings'
        php:
          $ref: '#/components/schemas/IPhpSettings'
        binary:
          $ref: '#/components/schemas/IBinarySettings'
        pmTaint:
          $ref: '#/components/schemas/IPmTaintSettings'
        configuration:
          $ref: '#/components/schemas/IConfigSettings'
        fingerprint:
          $ref: '#/components/schemas/IFingerprintSettings'
        dependencyCheck:
          $ref: '#/components/schemas/IDependencyCheckSettings'
        blackBox:
          $ref: '#/components/schemas/IBlackBoxSettings'
        common:
          $ref: '#/components/schemas/ICommonSettings'
        reportMailSenderParameters:
          $ref: '#/components/schemas/ReportMailSenderParameters'
      additionalProperties: false
    CreateProjectModel:
      # V.3.6: Had to replace IScanSettings with manually added V36ScanSettings
      type: object
      properties:
        name:
          type: string
          nullable: true
        scanSettings:
          # $ref: '#/components/schemas/IScanSettings'
          $ref: '#/components/schemas/V36ScanSettings'
      additionalProperties: false
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        creationDate:
          type: string
          format: date-time
        settingsId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        lastScanDate:
          type: string
          # V.3.6: Had to remove date-time specification as value returned doesn' conform to RFC 3339
          # format: date-time
        filePatterns:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ProjectLight:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        settingsId:
          type: string
          format: uuid
      additionalProperties: false
    AuthScopeType:
      enum:
        - None
        - Agent
        - Viewer
        - Internal
        - Web
        - WebRefresh
        - WebLongRefresh
        - AccessToken
        - AccessTokenRefresh
      type: string
    Stage:
      enum:
        - Unknown
        - VFSSetup
        - Initialize
        - Precheck
        - Scan
        - Finalize
        - Done
        - Failed
        - Aborted
        - Enqueued
        - Autocheck
      type: string
    ScanProgress:
      type: object
      properties:
        stage:
          $ref: '#/components/schemas/Stage'
        subStage:
          type: string
          nullable: true
        value:
          type: integer
          format: int32
      additionalProperties: false
    ScanResultState:
      enum:
        - 0
        - 1
        - 2
        - 3
      x-enum-varnames:
        - None
        - Inaccurate
        - Incremental
        - Incorrect
      type: integer
    PolicyState:
      enum:
        - None
        - Rejected
        - Confirmed
      type: string
    ScanResultStatistic:
      type: object
      properties:
        highLevelVulnerabilityCount:
          type: integer
          format: int32
        mediumLevelVulnerabilityCount:
          type: integer
          format: int32
        lowLevelVulnerabilityCount:
          type: integer
          format: int32
        potentialVulnerabilityCount:
          type: integer
          format: int32
        totalBlackBoxVulnerabilityCount:
          type: integer
          format: int32
        totalStaticVulnerabilityCount:
          type: integer
          format: int32
        totalVulnerabilityCount:
          type: integer
          format: int32
        totalFileCount:
          type: integer
          format: int32
        totalUrlCount:
          type: integer
          format: int32
        scannedUrlCount:
          type: integer
          format: int32
        scannedFileCount:
          type: integer
          format: int32
        scanDuration:
          type: string
          format: date-span
        state:
          $ref: '#/components/schemas/ScanResultState'
        policyState:
          $ref: '#/components/schemas/PolicyState'
      additionalProperties: false
    ComponentVersion:
      type: object
      properties:
        type:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
      additionalProperties: false
    ScanExtraOptions:
      type: object
      properties:
        fullRescanOnNewFilesAdded:
          type: boolean
      additionalProperties: false
    ScanEnvironment:
      type: object
      properties:
        infrastructureVersion:
          $ref: '#/components/schemas/ComponentVersion'
        componentVersions:
          type: array
          items:
            $ref: '#/components/schemas/ComponentVersion'
          nullable: true
        installatorVersion:
          $ref: '#/components/schemas/ComponentVersion'
        clientVersion:
          $ref: '#/components/schemas/ComponentVersion'
        yaraHash:
          type: string
          format: byte
          nullable: true
        sastHashes:
          type: object
          properties:
            None:
              type: string
              format: byte
            Binary:
              type: string
              format: byte
            Configuration:
              type: string
              format: byte
            Fingerprint:
              type: string
              format: byte
            Java:
              type: string
              format: byte
            CSharp:
              type: string
              format: byte
            PHP:
              type: string
              format: byte
            PmTaint:
              type: string
              format: byte
            BlackBox:
              type: string
              format: byte
            JavaScript:
              type: string
              format: byte
            DependencyCheck:
              type: string
              format: byte
          additionalProperties: false
          nullable: true
        extraOptions:
          $ref: '#/components/schemas/ScanExtraOptions'
      additionalProperties: false
    ScanResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        settingsId:
          type: string
          format: uuid
        version:
          type: integer
          format: int32
        scanDate:
          type: string
          # V.3.6: Had to remove date-time specification as value returned doesn' conform to RFC 3339
          # format: date-time
        progress:
          $ref: '#/components/schemas/ScanProgress'
        statistic:
          $ref: '#/components/schemas/ScanResultStatistic'
        scanEnvironment:
          $ref: '#/components/schemas/ScanEnvironment'
        previousScanResultId:
          type: string
          format: uuid
          nullable: true
        isRunFromQueue:
          type: boolean
      additionalProperties: false
    RvpGrammar:
      enum:
        - Undefined
        - SqlCommon
        - SqlCe
        - MySql
        - MsSql
        - NpgSql
        - OracleSql
        - Sqlite
        - SqlTableName
        - ConnectionStringText
        - ConnectionStringItem
        - Xquery
        - ConfigurationKey
        - ConfigurationValue
        - FileName
        - LogEntry
        - CommandLineArguments
        - Ldap
        - Linq
        - HttpHeaderName
        - HttpHeaderValue
        - Host
        - Port
        - IpAddress
        - WebSocketUri
        - HttpUri
        - HtmlText
        - JavaScriptCode
        - SerializedBase64XmlData
        - SerializedXmlData
        - SerializedJsonData
        - XPath
        - XmlDocument
        - ArbitraryIntData
        - ArbitraryStringData
      type: string
    IRvpExpression:
      type: object
      additionalProperties: false
    RvpPvo:
      type: object
      properties:
        grammar:
          $ref: '#/components/schemas/RvpGrammar'
        requestPath:
          type: string
          nullable: true
        condition:
          $ref: '#/components/schemas/IRvpExpression'
        argument:
          $ref: '#/components/schemas/IRvpExpression'
      additionalProperties: false
    IssueType:
      enum:
        - Unknown
        - Vulnerability
        - Weakness
        - Configuration
        - Fingerprint
        - BlackBox
        - YaraMatch
      type: string
    IssueApprovalState:
      enum:
        - None
        - Approval
        - Discard
        - NotExist
        - AutoApproval
      type: string
    TrackerType:
      enum:
        - Unknown
        - Jira
        - Tfs
        - Youtrack
      type: string
    TicketLink:
      type: object
      properties:
        trackerType:
          $ref: '#/components/schemas/TrackerType'
        connectionId:
          type: string
          format: uuid
        ticketId:
          type: string
          nullable: true
      additionalProperties: false
    IssueLevel:
      enum:
        - None
        - Potential
        - Low
        - Medium
        - High
      type: string
    IssueBase:
      type: object
      properties:
        rvpPvo:
          $ref: '#/components/schemas/RvpPvo'
        Class:
          $ref: '#/components/schemas/IssueType'
        internalId:
          type: string
          format: uuid
        id:
          type: string
          nullable: true
        isOldInScanResultId:
          type: string
          format: uuid
          nullable: true
        isFavorite:
          type: boolean
        groupId:
          type: string
          nullable: true
        approvalState:
          $ref: '#/components/schemas/IssueApprovalState'
        isNewInScanResultId:
          type: string
          format: uuid
          nullable: true
        scanResultId:
          type: string
          format: uuid
        isSuspected:
          type: boolean
        isSuppressed:
          type: boolean
        type:
          type: string
          nullable: true
        linkedTickets:
          type: array
          items:
            $ref: '#/components/schemas/TicketLink'
          nullable: true
        counter:
          type: integer
          format: int64
        level:
          $ref: '#/components/schemas/IssueLevel'
      additionalProperties: false
    DescriptionBaseValue:
      type: object
      properties:
        header:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    IssueDescriptionModel:
      type: object
      properties:
        identity:
          type: string
          nullable: true
        issueType:
          $ref: '#/components/schemas/IssueType'
        descriptionValue:
          $ref: '#/components/schemas/DescriptionBaseValue'
      additionalProperties: false
    IssueBaseMetadata:
      type: object
      properties:
        key:
          type: string
          nullable: true
        issueType:
          $ref: '#/components/schemas/IssueType'
        level:
          $ref: '#/components/schemas/IssueLevel'
      additionalProperties: false
    IssuesModel:
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/IssueBase'
          nullable: true
        descriptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IssueDescriptionModel'
          nullable: true
        metadatas:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IssueBaseMetadata'
          nullable: true
      additionalProperties: false
    UpdateIssueExploitModel:
      type: object
      properties:
        exploitUrl:
          type: string
          nullable: true
        exploit:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
      additionalProperties: false
    ChangeIssueApprovalStateModel:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/IssueApprovalState'
        comment:
          type: string
          nullable: true
      additionalProperties: false
    ChangeIssueIsFavoriteModel:
      type: object
      properties:
        isFavorite:
          type: boolean
        comment:
          type: string
          nullable: true
      additionalProperties: false
    ChangeIssuesApprovalStateModel:
      type: object
      properties:
        issuesStates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IssueApprovalState'
          nullable: true
        comment:
          type: string
          nullable: true
      additionalProperties: false
    WorkType:
      enum:
        - Unknown
        - Scan
        - Autocheck
      type: string
    ErrorLevel:
      enum:
        - Error
        - Warn
        - Info
        - Debug
        - Trace
      type: string
    ScanError:
      type: object
      properties:
        id:
          type: string
          format: uuid
        hash:
          type: string
          format: byte
          nullable: true
        scanResultId:
          type: string
          format: uuid
        errorType:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        scanStage:
          $ref: '#/components/schemas/Stage'
        workType:
          $ref: '#/components/schemas/WorkType'
        primaryFile:
          type: string
          nullable: true
        isCritical:
          type: boolean
        level:
          $ref: '#/components/schemas/ErrorLevel'
      additionalProperties: false
    FieldName:
      type: object
      additionalProperties: false
    FieldSettings:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FieldName'
        values:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    TicketTemplate:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/FieldSettings'
          nullable: true
      additionalProperties: false
    IssueTrackerIntegrationSettings:
      type: object
      properties:
        id:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        triggerId:
          type: string
          format: uuid
          nullable: true
        connectionId:
          type: string
          format: uuid
        project:
          type: string
          nullable: true
        ticketType:
          type: string
          nullable: true
        template:
          $ref: '#/components/schemas/TicketTemplate'
      additionalProperties: false
    ProjectStage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        policyState:
          $ref: '#/components/schemas/PolicyState'
        progress:
          $ref: '#/components/schemas/ScanProgress'
      additionalProperties: false
    ActiveScanModel:
      type: object
      properties:
        scanResultId:
          type: string
          format: uuid
        progress:
          $ref: '#/components/schemas/ScanProgress'
        project:
          $ref: '#/components/schemas/ProjectLight'
      additionalProperties: false
    IssueResourcesModel:
      type: object
      properties:
        descriptions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IssueDescriptionModel'
          nullable: true
        metadatas:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IssueBaseMetadata'
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        extensions:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
          readOnly: true
      additionalProperties: false
    ReportType:
      enum:
        - Custom
        - PlainReport
        - AutoCheck
        - Nist
        - Oud4
        - Owasp
        - Owaspm
        - Pcidss
        - Sans
      type: string
    User:
      type: object
      properties:
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        sid:
          type: string
          nullable: true
      additionalProperties: false
    ReportTemplateModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        isReadOnly:
          type: boolean
        isFavorite:
          type: boolean
        type:
          $ref: '#/components/schemas/ReportType'
        outputFileName:
          type: string
          nullable: true
        creator:
          $ref: '#/components/schemas/User'
        creationDate:
          type: string
          format: date-time
      additionalProperties: false
    ReportTemplateUpsertModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        outputFileName:
          type: string
          nullable: true
      additionalProperties: false
    TemplateValidationResult:
      type: object
      properties:
        hasErrors:
          type: boolean
        messages:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    ReportFormatType:
      enum:
        - Html
        - Xml
        - Json
        - Custom
        - Pdf
      type: string
    UserReportParameters:
      type: object
      properties:
        id:
          type: integer
          format: int64
        saveAsPath:
          type: string
          nullable: true
        useFilters:
          type: boolean
        includeDFD:
          type: boolean
        includeGlossary:
          type: boolean
        reportTemplateId:
          type: string
          format: uuid
        formatType:
          $ref: '#/components/schemas/ReportFormatType'
        createPdfPrintVersion:
          type: boolean
        includeSuppressedVulnerabilities:
          type: boolean
        includeDiscardedVulnerabilities:
          type: boolean
        includeSuspectedVulnerabilities:
          type: boolean
      additionalProperties: false
    # Enum values are defined as integer numbers as now we do support bit masks
    IssuesFilterLevel:
      enum:
        - 0
        - 1
        - 2
        - 4
        - 8
        - 31
      x-enum-varnames:
        - None
        - Low
        - Medium
        - High
        - Potential
        - All
      type: integer
    # Enum values are defined as integer numbers as now we do support bit masks
    IssuesFilterConfirmationStatus:
      enum:
        - 0
        - 1
        - 2
        - 4
        - 8
        - 31
      x-enum-varnames:
        - Undefined
        - None
        - Approved
        - AutoApproved
        - Discarded
        - All
      type: integer
    # Enum values are defined as integer numbers as now we do support bit masks
    IssuesFilterExploitationCondition:
      enum:
        - 0
        - 1
        - 2
        - 7
      x-enum-varnames:
        - None
        - NoCondition
        - UnderCondition
        - All
      type: integer
    # Enum values are defined as integer numbers as now we do support bit masks
    IssuesFilterSuppressStatus:
      enum:
        - 0
        - 1
        - 2
        - 7
      x-enum-varnames:
        - None
        - Suppressed
        - ExceptSuppressed
        - All
      type: integer
    # Enum values are defined as integer numbers as now we do support bit masks
    IssuesFilterSourceType:
      enum:
        - 0
        - 1
        - 2
        - 7
      x-enum-varnames:
        - None
        - Static
        - BlackBox
        - All
      type: integer
    # Enum values are defined as integer numbers as now we do support bit masks
    IssuesFilterScanMode:
      enum:
        - 0
        - 1
        - 2
        - 4
        - 15
      x-enum-varnames:
        - None
        - FromEntryPoint
        - FromPublicProtected
        - FromOther
        - All
      type: integer
    # Enum values are defined as integer numbers as now we do support bit masks
    IssuesFilterActualStatus:
      enum:
        - All
        - IsNew
        - NotIsNew
      type: string
    IssuesFilterType:
      type: object
      properties:
        value:
          type: string
          nullable: true
        enable:
          type: boolean
      additionalProperties: false
    IssuesFilterPathInfo:
      type: object
      properties:
        path:
          type: string
          nullable: true
        physicalPath:
          type: string
          nullable: true
      additionalProperties: false
# Property types are changed to integers as issueLevel, confirmationStatus,
# exploitationCondition, suppressStatus, sourceType, scanMode and actualStatus are support bit masks
    IssuesFilter:
      type: object
      properties:
        issueLevel:
#           $ref: '#/components/schemas/IssuesFilterLevel'
          type: integer
          format: int32
        confirmationStatus:
#           $ref: '#/components/schemas/IssuesFilterConfirmationStatus'
          type: integer
          format: int32
        exploitationCondition:
#           $ref: '#/components/schemas/IssuesFilterExploitationCondition'
          type: integer
          format: int32
        suppressStatus:
#           $ref: '#/components/schemas/IssuesFilterSuppressStatus'
          type: integer
          format: int32
        sourceType:
#           $ref: '#/components/schemas/IssuesFilterSourceType'
          type: integer
          format: int32
        scanMode:
#           $ref: '#/components/schemas/IssuesFilterScanMode'
          type: integer
          format: int32
        actualStatus:
          $ref: '#/components/schemas/IssuesFilterActualStatus'
        hideSecondOrder:
          type: boolean
        hideSuspected:
          type: boolean
        hidePotential:
          type: boolean
        byFavorite:
          type: boolean
        byBestPlaceToFix:
          type: boolean
        types:
          type: array
          items:
            $ref: '#/components/schemas/IssuesFilterType'
          nullable: true
        pathInfo:
          $ref: '#/components/schemas/IssuesFilterPathInfo'
        pattern:
          type: string
          nullable: true
        selectAllLevelsSeparately:
          type: boolean
        selectAllConfirmationStatusSeparately:
          type: boolean
        selectAllExploitationConditionSeparately:
          type: boolean
        selectAllSuppressStatusSeparately:
          type: boolean
        selectAllScanModeSeparately:
          type: boolean
        selectAllActualStatusSeparately:
          type: boolean
      additionalProperties: false
    ReportGenerateModel:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/UserReportParameters'
        filters:
          $ref: '#/components/schemas/IssuesFilter'
        scanResultId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        localeId:
          type: string
          nullable: true
      additionalProperties: false
    File:
      type: object
      additionalProperties: false
    WafPatchGenerateModel:
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/IssuesFilter'
        useFilters:
          type: boolean
        scanResultId:
          type: string
          format: uuid
        projectId:
          type: string
          format: uuid
        localeId:
          type: string
          nullable: true
      additionalProperties: false
    ReportTemplate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        compressedData:
          type: string
          nullable: true
        isReadOnly:
          type: boolean
        isFavorite:
          type: boolean
        type:
          $ref: '#/components/schemas/ReportType'
        outputFileName:
          type: string
          nullable: true
        userCreator:
          type: string
          nullable: true
        creationDate:
          type: string
          format: date-time
      additionalProperties: false
    TopVulnerabilityProjects:
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        from:
          type: string
          format: date-time
          nullable: true
        to:
          type: string
          format: date-time
          nullable: true
        count:
          type: integer
          format: int32
          nullable: true
        orderBy:
          type: string
          nullable: true
        direction:
          type: string
          nullable: true
        rejected:
          type: boolean
          nullable: true
        isSuppressed:
          type: boolean
          nullable: true
      additionalProperties: false
    ApiErrorType:
      enum:
        - None
        - INCORRECT_USER_AND_PASSWORD
        - USER_ID_IS_EMPTY
        - MEMBER_ALREADY_EXISTS
        - PROJECT_ROLE_PERMISSIONS_ALREADY_EXISTS
        - ACCESS_TOKEN_IS_INCORRECT
        - ACCESS_TOKEN_WITH_SAME_NAME_ALREADY_EXISTS
        - UPDATE_PACKAGE_VERSION_IS_ALREADY_UPLOADED
        - UPDATE_PACKAGE_UPLOADED_IS_ALREADY_STARTED
        - UPDATE_PACKAGE_UNKNOWN_PRODUCT
        - UPDATE_PACKAGE_VERSION_INVALID
        - UPDATE_PACKAGE_VERSION_IS_NOT_UPLOADED
        - UPDATE_SERVER_PROCESS_RUN_TIMEOUT
        - UPDATE_SERVER_PARAMETERS_INVALID
        - UPDATE_SERVER_INSTALLER_EXIT_WITH_ERROR
        - UPDATE_SERVER_PACKAGE_IS_INCORRECT
        - UPDATE_SERVER_NOT_ENOUGH_SPACE
        - CERTIFICATE_FILE_IS_EMPTY
        - CERTIFICATE_IS_ALREADY_INSTALLED
        - CERTIFICATE_IS_NOT_VALID
        - URI_IS_NOT_VALID
        - PROJECT_WITH_SAME_NAME_ALREADY_EXISTS
        - UNEXPECTED_SCAN_STAGE
        - ISSUE_TRACKER_CONNECTION_NOT_FOUND
        - ISSUE_TRACKER_CONNECTION_SETTINGS_NOT_SET
        - ISSUE_TRACKER_SETTINGS_ID_NOT_SET
        - ISSUE_TRACKER_CREDENTIALS_NOT_SET
        - ISSUE_TRACKER_HOST_IS_INCORRECT
        - ISSUE_TRACKER_OAUTH_DATA_NOT_SET
        - ISSUE_TRACKER_TRACKER_NOT_FOUND
        - ISSUE_TRACKER_TRACKER_NOT_FOUND_WITH_OAUTH
        - ISSUE_TRACKER_INVALID_TICKET_LINK
        - ISSUE_TRACKER_IMPOSSIBLE_SKIP_UPDATE_CREDENTIALS
        - ISSUE_TRACKER_UNSUPPORTED_FIELDS_COFIGURATION
        - ISSUE_TRACKER_TICKET_CREATION_FAILED
        - ISSUE_TRACKER_PRIORITIES_GETTING_FAILED
        - ISSUE_TRACKER_USERS_GETTING_FAILED
        - ISSUE_TRACKER_STATUSES_GETTING_FAILED
        - ISSUE_TRACKER_FIELDS_GETTING_FAILED
        - ISSUE_TRACKER_OPTIONS_GETTING_FAILED
        - ISSUE_TRACKER_EXISTING_TICKETS_GETTING_FAILED
        - ISSUE_TRACKER_COMPONENTS_GETTING_FAILED
        - ISSUE_TRACKER_CAPTCHA_CHALLENGE
        - ISSUE_TRACKER_AUTHENTICATION_DENIED_DETAILED
        - ISSUE_TRACKER_AUTHENTICATION_DENIED
        - ISSUE_TRACKER_AUTHENTICATION_FAILED
        - FS_SOURCE_IS_BUSY
        - ISSUE_ATTACH_TICKET_LINK_FAILED
        - COMMENT_POLICY_FAILED_COMMENT_IS_EMPTY
        - PROJECTS_COUNT_LIMITED_BY_LICENSE
        - LICENSE_FILE_IS_INVALID
        - LICENSE_FINGERPRINT_ERROR
        - UNKNOWN_SOURCE_VERSION_CONTROL_SYSTEM
        - SOURCE_VERSION_CONTROL_SYSTEM_ERROR
        - REQUEST_WEB_SOCKETS_ONLY
        - INVALID_VERSION_CONTROL_SYSTEM_SETTINGS
        - SCAN_AGENT_NOT_FOUND
        - SCAN_ALREADY_SCHEDULED
        - INCORRECT_AGENT_STATUS
        - SCAN_AGENT_WAS_SUSPENDED
        - SCAN_AGENT_IS_SCANNING
        - SCAN_NOT_FOUND
        - ACTIVE_SCAN_AGENTS_NOT_FOUND
        - SCAN_AGENT_IS_ACTIVE
        - SERVER_CERTIFICATE_NOT_FOUND
        - FILESYSTEM_ERROR_ACCESS_DENIED
        - VAULT_CREDENTIALS_NOT_FOUND
        - REPORT_TEMPLATE_NOT_FOUND
        - REPORT_GENERATE_FAILED
        - REPORT_TEMPLATE_INVALID
        - REPORT_TEMPLATE_UNKNOWN_FORMAT
        - REPORT_INCORRECT_PARAMETERS
        - REPORT_TEMPLATE_WITH_SAME_NAME_ALREADY_EXISTS
        - REPORT_TEMPLATE_FILE_NAME_INCORRECT_MACROS
      type: string
    ApiErrorModel:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/ApiErrorType'
        details:
          type: object
          additionalProperties:
            type: string
          nullable: true
      additionalProperties: false
    DateInterval:
      enum:
        - Second
        - Minute
        - Hour
        - Day
        - Week
        - Month
        - Year
      type: string
    VulnTimeDistrib:
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        from:
          type: string
          format: date-time
          nullable: true
        to:
          type: string
          format: date-time
          nullable: true
        interval:
          $ref: '#/components/schemas/DateInterval'
        rejected:
          type: boolean
          nullable: true
        isSuppressed:
          type: boolean
          nullable: true
      additionalProperties: false
    IssueStatisticGroup:
      type: object
      properties:
        projectIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        from:
          type: string
          format: date-time
          nullable: true
        to:
          type: string
          format: date-time
          nullable: true
        class:
          $ref: '#/components/schemas/IssueType'
        type:
          type: string
          nullable: true
        level:
          $ref: '#/components/schemas/IssueLevel'
        state:
          $ref: '#/components/schemas/IssueApprovalState'
        isSuppressed:
          type: boolean
          nullable: true
      additionalProperties: false
    V36ScanAppType:
      # V.3.6: As v.3.6 returns scanAppType as a comma-separated string, that field is defined as a string too,
      # But to allow strict parsing of that string we need to define enum
      enum:
        - None
        - Binary
        - Configuration
        - Fingerprint
        - Java
        - CSharp
        - PHP
        - PmTaint
        - BlackBox
        - JavaScript
        - DependencyCheck
      type: string
    V36ProgrammingLanguage:
      # V.3.6: As EnterpriseLicenseData uses integer representation of ProgrammingLanguage, but ScanSettings
      # are use string representationso we need to add new type
      enum:
        - DotNet
        - Php
        - Java
        - Html
        - JavaScript
        - All
        - SandBox
        - Binary
        - PlSql
        - TSql
        - Aspx
        - C
        - CPlusPlus
        - ObjectiveC
        - Swift
        - MySql
        - Python
        - CSharp
        - VB
        - Go
        - Kotlin
        - None
      type: string
    # V.3.6: Need to implement own ScanSettings type as existing v.3.6 API returns data that doesn't corresponds IScanSettings
    V36ScanSettings:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        # Following lines are copied from ISourceScanSettings
        isUnpackUserPackages:
          type: boolean
        isDownloadDependencies:
          type: boolean
        isGraphEnabled:
          type: boolean
        isUsePublicAnalysisMethod:
          type: boolean
        isUseEntryAnalysisPoint:
          type: boolean
        disableInterpretCores:
          type: boolean
        scope:
          type: string
          nullable: true
        programmingLanguage:
          # As for v.3.6 programmingLanguage is returned as string enum value
          # $ref: '#/components/schemas/ProgrammingLanguage'
          $ref: '#/components/schemas/V36ProgrammingLanguage'
        scanAppType:
          # As for v.3.6 scanApptype is returned as comma-separated string
          # $ref: '#/components/schemas/ScanAppType'
          type: string
        rootFolder:
          type: string
          nullable: true
        site:
          type: string
          nullable: true
        scanTarget:
          type: string
          nullable: true
        actualScanTarget:
          type: string
          nullable: true
        customParameters:
          type: string
          nullable: true
        useIncrementalScan:
          type: boolean
          deprecated: true
        fullRescanOnNewFilesAdded:
          type: boolean
          deprecated: true
        skipFileFormats:
          type: array
          items:
            type: string
          nullable: true
        skipFilesFolders:
          type: array
          items:
            type: string
          nullable: true
        disabledTypes:
          type: array
          items:
            type: string
          nullable: true
        hideSuspectedVulnerabilities:
          type: boolean
        isStaticScanEnabled:
          type: boolean
          readOnly: true
        isBlackBoxScanEnabled:
          type: boolean
          readOnly: true
        sourceControlSettings:
          $ref: '#/components/schemas/SourceControlSettings'
        preprocessingTimeout:
          type: integer
          format: int32
        sendEmailWithReportsAfterScan:
          type: boolean
        runAutocheckAfterScan:
          type: boolean
        compressReport:
          type: boolean
        considerPreviousScan:
          type: boolean
          nullable: true
        tempDir:
          type: string
          nullable: true
        useIssueTrackerIntegration:
          type: boolean
        # Need to add more fields from IBinarySettings that returned by API calls
        isUseIssueScan:
          type: boolean
        isUseTaintScan:
          type: boolean
        isUsePatternmatchingScan:
          type: boolean
        # ... and few fields from IJavaSettings
        javaParameters:
          type: string
          nullable: true
        javaVersion:
          $ref: '#/components/schemas/JavaVersions'
        javaNormalizeVersionPattern:
          type: string
          nullable: true
        useJavaNormalizeVersionPattern:
          type: boolean
        # ... from IConfigSettings
        configurationFiles:
          type: array
          items:
            type: string
          nullable: true
        # ... from IPmTaintSettings
        disabledPatterns:
          type: array
          items:
            type: string
          nullable: true
        enabledPatterns:
          type: array
          items:
            type: string
          nullable: true
        usePmAnalysis:
          type: boolean
          nullable: true
        useTaintAnalysis:
          type: boolean
        # ... from IFingerprintSettings
        customYaraRules:
          type: string
          nullable: true
        useDefaultFingerprints:
          type: boolean
        useCustomYaraRules:
          type: boolean
        # ... from IBlackBoxSettings
        level:
          $ref: '#/components/schemas/BlackBoxScanLevel'
        scanScope:
          $ref: '#/components/schemas/ScanScope'
        autocheckSite:
          type: string
          nullable: true
        autocheckCustomHeaders:
          type: array
          items:
            type: array
            items:
              type: string
          nullable: true
        customHeaders:
          type: array
          items:
            type: array
            items:
              type: string
          nullable: true
        authentication:
          $ref: '#/components/schemas/BlackBoxAuthentication'
        autocheckAuthentication:
          $ref: '#/components/schemas/BlackBoxAuthentication'
        proxySettings:
          $ref: '#/components/schemas/BlackBoxProxySettings'
        autocheckProxySettings:
          $ref: '#/components/schemas/BlackBoxProxySettings'
        configurationPath:
          type: string
          nullable: true
        bindAddress:
          type: string
          nullable: true
        # ... from ICSharpSettings
        projectType:
          $ref: '#/components/schemas/DotNetProjectType'
        solutionFile:
          type: string
          nullable: true
        webSiteFolder:
          type: string
          nullable: true
        # ... from IJavaScriptSettings
        javaScriptProjectFile:
          type: string
          nullable: true
        javaScriptProjectFolder:
          type: string
          nullable: true
        # ... from IDependencyCheckSettings
        isDependencyCheckAutoUpdateEnabled:
          type: boolean
        dependencyCheckAutoUpdateBaseUrl:
          type: string
          nullable: true
        dependencyCheckAutoUpdateModifiedUrl:
          type: string
          nullable: true
        dependencyCheckDataBaseFolder:
          type: string
          nullable: true
        dependencyCheckAutoUpdateRetireJsUrl:
          type: string
          nullable: true
        # ... from IScanSettings
        reportMailSenderParameters:
          $ref: '#/components/schemas/ReportMailSenderParameters'
  securitySchemes:
    Bearer:
      type: apiKey
      description: Please insert JWT with Bearer into field
      name: Authorization
      in: header
