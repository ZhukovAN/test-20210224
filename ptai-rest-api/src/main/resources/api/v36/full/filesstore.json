{
  "openapi": "3.0.1",
  "info": {
    "title": "filesStore"
  },
  "paths": {
    "/api/DirectoryContent/content/{projectId}": {
      "get": {
        "tags": [
          "DirectoryContent"
        ],
        "summary": "Get project`s directory content information",
        "operationId": "RootDirectoryContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of expanding of elements",
            "schema": {
              "type": "integer",
              "description": "Depth of expanding of elements",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Returns the directory content information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryContent"
                }
              }
            }
          }
        }
      }
    },
    "/api/DirectoryContent/content/{projectId}/{path}": {
      "get": {
        "tags": [
          "DirectoryContent"
        ],
        "summary": "Get project`s directory content information",
        "operationId": "DirectoryContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "Subdirectory path. For root set empty",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Subdirectory path. For root set empty",
              "nullable": true
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of expanding of elements",
            "schema": {
              "type": "integer",
              "description": "Depth of expanding of elements",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Returns the directory content information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryContent"
                }
              }
            }
          }
        }
      }
    },
    "/api/FileContent/{projectId}/{file}": {
      "get": {
        "tags": [
          "FileContent"
        ],
        "operationId": "GetFileContent",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "file",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/SourceControl/branches/{projectId}": {
      "post": {
        "tags": [
          "SourceControl"
        ],
        "summary": "Read branches from project`s repository.",
        "operationId": "Branches",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Repostiroy settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SourceControl/currentCommit/{projectId}": {
      "post": {
        "tags": [
          "SourceControl"
        ],
        "summary": "Read current id commit from project`s repository.",
        "operationId": "CurrentHashCommit",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Repostory settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/SourceControl/supportedCredentials": {
      "post": {
        "tags": [
          "SourceControl"
        ],
        "summary": "Get supported credentials types",
        "operationId": "SupportedCredentials",
        "requestBody": {
          "description": "Repostory settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceControlCredentalsType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceControlCredentalsType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceControlCredentalsType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SourceControl/projects/{projectId}": {
      "post": {
        "tags": [
          "SourceControl"
        ],
        "summary": "Get projects",
        "operationId": "Projects",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Repostory settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SourceControl/projectCollections/{projectId}": {
      "post": {
        "tags": [
          "SourceControl"
        ],
        "summary": "Get projects collections",
        "operationId": "ProjectsCollections",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Repostory settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SourceControl/checkConnection/{projectId}": {
      "post": {
        "tags": [
          "SourceControl"
        ],
        "summary": "Check connection",
        "operationId": "CheckConnection",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Repostory settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/SourceControl/settingsIsValid/{projectId}": {
      "post": {
        "tags": [
          "SourceControl"
        ],
        "summary": "Check settings is valid",
        "operationId": "SettingsIsValid",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Repostory settings",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControlSettings"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/SourceControlWs/checkout/{projectId}": {
      "get": {
        "tags": [
          "SourceControlWs"
        ],
        "summary": "Checkout project`s repository. Works through web sockets. After connection need to send the connection settings of the version control system",
        "operationId": "Checkout",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          },
          {
            "name": "cleanCheckoutDir",
            "in": "query",
            "description": "Need clean project`s directory before checkout",
            "schema": {
              "type": "boolean",
              "description": "Need clean project`s directory before checkout",
              "default": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/SourceControlWs/update/{projectId}": {
      "get": {
        "tags": [
          "SourceControlWs"
        ],
        "summary": "Update project`s repository. Works through web sockets. After connection need to send the connection settings of the version control system",
        "operationId": "Update",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IActionResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Store/{projectId}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "operationId": "Delete",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Store/temp/{projectId}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "operationId": "DeleteTemp",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Store"
        ],
        "operationId": "UploadTemp",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Store"
        ],
        "operationId": "DownloadTemp",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Store/sources/{projectId}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "operationId": "DeleteSources",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Store"
        ],
        "operationId": "UploadSources",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Store"
        ],
        "operationId": "DownloadSources",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Store/logs/{projectId}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "operationId": "DeleteLogs",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Store/reports/{projectId}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "operationId": "DeleteReports",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Store/logs/{projectId}/{scanResultId}": {
      "post": {
        "tags": [
          "Store"
        ],
        "operationId": "UploadLogs",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanResultId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Store"
        ],
        "operationId": "DownloadLogs",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanResultId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Store/reports/{projectId}/{scanResultId}": {
      "post": {
        "tags": [
          "Store"
        ],
        "operationId": "UploadReports",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanResultId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "Store"
        ],
        "operationId": "DownloadReports",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "scanResultId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Store/sources/detectProgrammingLanguage/{projectId}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Detect programming language for project sources",
        "operationId": "DetectProgrammingLanguage",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          },
          {
            "name": "depth",
            "in": "query",
            "description": "Depth of analyzing elements",
            "schema": {
              "type": "integer",
              "description": "Depth of analyzing elements",
              "format": "int32",
              "default": 2
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Count of analyzing elements",
            "schema": {
              "type": "integer",
              "description": "Count of analyzing elements",
              "format": "int32",
              "default": 1000
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Returns the directory content information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProgrammingLanguage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgrammingLanguage"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgrammingLanguage"
                }
              }
            }
          }
        }
      }
    },
    "/api/Store/sources/pathExists/{projectId}/{path}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Verify path exists",
        "operationId": "PathExists",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "Subdirectory path. For root set empty",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Subdirectory path. For root set empty",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Returns the directory content information",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Store/sources/pathsExists/{projectId}": {
      "post": {
        "tags": [
          "Store"
        ],
        "summary": "Verify path from collection exists",
        "operationId": "PathsExists",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Subdirectory path. For root set empty",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Subdirectory path. For root set empty",
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Subdirectory path. For root set empty",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Subdirectory path. For root set empty",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Subdirectory path. For root set empty",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Returns the directory content information",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Store/sources/getFileNames/{projectId}": {
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Get file names by wildcard",
        "operationId": "GetFileNames",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project id",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Project id",
              "format": "uuid"
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Wildcard of filename",
            "schema": {
              "type": "string",
              "description": "Wildcard of filename",
              "nullable": true
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200": {
            "description": "Returns the directory content information",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DirectoryContent": {
        "type": "object",
        "properties": {
          "_directories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectoryContent"
            }
          },
          "_files": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "_hasContent": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RepositoryType": {
        "enum": [
          "None",
          "Git",
          "TFS"
        ],
        "type": "string"
      },
      "SourceControlCredentalsType": {
        "enum": [
          "None",
          "Anonymous",
          "Password",
          "AuthenticationToken",
          "SshKeys"
        ],
        "type": "string"
      },
      "SourceControlSettings": {
        "type": "object",
        "properties": {
          "repositoryType": {
            "$ref": "#/components/schemas/RepositoryType"
          },
          "repositoryUrl": {
            "type": "string",
            "nullable": true
          },
          "checkoutDir": {
            "type": "string",
            "nullable": true
          },
          "sourceControlCredentalsType": {
            "$ref": "#/components/schemas/SourceControlCredentalsType"
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "catalog": {
            "type": "string",
            "nullable": true
          },
          "project": {
            "type": "string",
            "nullable": true
          },
          "branch": {
            "type": "string",
            "nullable": true
          },
          "publicSSHKey": {
            "type": "string",
            "nullable": true
          },
          "privateSSHKey": {
            "type": "string",
            "nullable": true
          },
          "includeSubmodules": {
            "type": "boolean"
          },
          "updateSourcesBeforeScan": {
            "type": "boolean"
          },
          "useProxy": {
            "type": "boolean"
          },
          "credentialsId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IActionResult": {
        "type": "object",
        "additionalProperties": false
      },
      "ProgrammingLanguage": {
        "enum": [
          "None",
          "DotNet",
          "Php",
          "Java",
          "Html",
          "JavaScript",
          "All",
          "SandBox",
          "Binary",
          "PlSql",
          "TSql",
          "MySql",
          "Aspx",
          "C",
          "CPlusPlus",
          "ObjectiveC",
          "Swift",
          "Python",
          "CSharp",
          "VB",
          "Go",
          "Kotlin"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}