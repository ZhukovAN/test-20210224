openapi: 3.0.1
info:
  title: systemManagement
  version: "3.6"
servers:
  - url: https://ptai.domain.org:443/
security:
  - Bearer: []
paths:
  /api/Logs/download:
    get:
      tags:
        - Logs
      parameters:
        - name: dateFrom
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: dateTo
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
      responses:
        '200':
          description: Success
  /api/ServerCertificate/change:
    post:
      tags:
        - ServerCertificate
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                ContentType:
                  type: string
                  nullable: true
                ContentDisposition:
                  type: string
                  nullable: true
                Headers:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      type: string
                  nullable: true
                Length:
                  type: integer
                  format: int64
                Name:
                  type: string
                  nullable: true
                FileName:
                  type: string
                  nullable: true
                password:
                  type: string
                  nullable: true
            encoding:
              ContentType:
                style: form
              ContentDisposition:
                style: form
              Headers:
                style: form
              Length:
                style: form
              Name:
                style: form
              FileName:
                style: form
              password:
                style: form
      responses:
        '200':
          description: Success
  /api/ServerCertificate/get:
    get:
      tags:
        - ServerCertificate
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CertificateInfoModel'
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateInfoModel'
            text/json:
              schema:
                $ref: '#/components/schemas/CertificateInfoModel'
  /api/ServerSettings/proxy:
    post:
      tags:
        - ServerSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProxySettings'
      responses:
        '200':
          description: Success
    get:
      tags:
        - ServerSettings
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProxySettings'
            application/json:
              schema:
                $ref: '#/components/schemas/ProxySettings'
            text/json:
              schema:
                $ref: '#/components/schemas/ProxySettings'
  /health/summary:
    get:
      tags:
        - HealthCheck
      responses:
        '200':
          description: Success
          content:
            application/json:
              # V.3.6: Need to explicitly define schema
              # schema: {}
              schema:
                $ref: '#/components/schemas/HealthCheck'
components:
  schemas:
    CertificateInfoModel:
      type: object
      properties:
        thumbprint:
          type: string
          nullable: true
        friendlyName:
          type: string
          nullable: true
        subjectName:
          type: string
          nullable: true
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time
        daysBeforeExpiry:
          type: integer
          format: int32
          nullable: true
        issuer:
          type: string
          nullable: true
      additionalProperties: false
    ProxySettings:
      type: object
      properties:
        url:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        credentialsId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    # V.3.6: Need to explicitly define schema
    HealthCheck:
      type: object
      properties:
        TotalResponseTime:
          type: string
          nullable: true
        Services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceHealth'
          nullable: true
    # V.3.6: Need to explicitly define schema
    ServiceHealth:
      type: object
      properties:
        Service:
          type: string
          nullable: true
        Status:
          type: string
          nullable: true
        ResponseTime:
          type: string
          nullable: true
  securitySchemes:
    Bearer:
      type: apiKey
      description: Please insert JWT with Bearer into field
      name: Authorization
      in: header
