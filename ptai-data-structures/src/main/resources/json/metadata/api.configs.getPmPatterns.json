[
    {
        "key": "100",
        "pattern": "OPENSSL_NO_PADDING",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "101",
        "pattern": "<[^(md5|sha1)$]>(...)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "102",
        "pattern": "Configure.<[^write$]>(\"Security.level\", \"low\")",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "103",
        "pattern": "Configure.<[^write$]>(\"debug\",<[1..]>)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "104",
        "pattern": "<[^(debug_print_backtrace|var_dump|debug_zval_dump|print_r|var_export|phpinfo|mysql_error)$]>(...)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "107",
        "pattern": "(javax.crypto.)?Cipher.getInstance(<[\"RSA/ECB/PKCS1Padding\" || \"NoPadding$\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "108",
        "pattern": "(<[expr]>.)?<[[cC]ookie]>.setPath(<[\"^/?$\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "109",
        "pattern": "(<[expr]>.)?<[[cC]ookie]>.setDomain(<[\"^.?[a-zA-Z0-9\\-]+\\.[a-zA-Z0-9\\-]+$\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "111",
        "pattern": "<[expr]>.setSeed(<[..]>)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "113",
        "pattern": "<[expr]>.<[^(checkCallingOrSelfPermission|checkCallingOrSelfUriPermission)$]>(...)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "114",
        "pattern": "new AllowAllHostnameVerifier(...) <[||]> (#.)?SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "116",
        "pattern": "new SAXReader().read(<[~\".*\"]>) <[||]> new XMLUtil().parse(<[~\".*\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "117",
        "pattern": "OPENSSL_NO_PADDING",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "118",
        "pattern": "(<[^(j|J)avax]>.<[^(c|C)rypto]>.)?Cipher.getInstance(<[ \"(?i)[DES](/CBC/PKCS5Padding){0,1}\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "120",
        "pattern": "System.Security.Cryptography.MD5.Create(...)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "122",
        "pattern": "new Random(<[..]>) <[||]> new Random()",
        "filenameWildcard": null,
        "programmingLanguages": 5,
        "dataFormat": 1
    },
    {
        "key": "135",
        "pattern": "_",
        "filenameWildcard": null,
        "programmingLanguages": 30722,
        "dataFormat": 1
    },
    {
        "key": "142",
        "pattern": "_",
        "filenameWildcard": null,
        "programmingLanguages": 30722,
        "dataFormat": 1
    },
    {
        "key": "144",
        "pattern": "\"private_key_bits\" = <[0..2048]> <[||]> config[\"private_key_bits\"] = <[0..2048]>",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "145",
        "pattern": "session_set_cookie_params(<[3600..]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "146",
        "pattern": "session_set_cookie_params(#,#,#) <[||]> session_set_cookie_params(#,#,#,false,#*) <[||]> <[set(raw)?cookie]>(#, #) <[||]> <[set(raw)?cookie]>(#, #, #, #, #, <[false || 0]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "148",
        "pattern": "phpinfo(INFO_MODULES)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "149",
        "pattern": "mysql_connect(#, #, dbConfig[<[\"\\w+\"]>])",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "151",
        "pattern": "#.exec(<[\"chmod [24]?777\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "152",
        "pattern": "#.getProperty(\"password\");",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "153",
        "pattern": "#.setMaxAge(<[3600..]>);",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "154",
        "pattern": "Cookie <[@cookie]> = new Cookie(...);\n<[~]><[@cookie]>.setSecure(true);\n#.addCookie(<[@cookie]>);",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "156",
        "pattern": "#.printStackTrace(#*)",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "157",
        "pattern": "new DESCryptoServiceProvider()",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "158",
        "pattern": "Comment: <[ \"(?i)(password|pwd)\\s*(\\=|is|\\:)\" ]>",
        "filenameWildcard": null,
        "programmingLanguages": 66327,
        "dataFormat": 1
    },
    {
        "key": "162",
        "pattern": "_",
        "filenameWildcard": null,
        "programmingLanguages": 30722,
        "dataFormat": 1
    },
    {
        "key": "24544",
        "pattern": "String <[@hashAlgorithm]> = <[(request | ^req$)]>. getParameter(...); MessageDigest.getInstance(<[@hashAlgorithm]>);",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24545",
        "pattern": "Cipher.getInstance(<[\"RSA/ECB/PKCS1Padding\" || \"NoPadding$\"]>);",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24546",
        "pattern": "<[ [Pp]assword ]>.put(#, <[\".*\"]>);",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24547",
        "pattern": "String <[@path]> = <[(request | ^req$)]>. getParameter(...); \r\nnew File(#*, <{ <[@path ]> }>, #*);",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24548",
        "pattern": "String <[@path]> = <[(request | ^req$)]>. getParameter(...); \nClass.forName(<{ <[@path]> }>);",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24549",
        "pattern": "new File(<[\"[\\\/]\"]>)",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24550",
        "pattern": "#.setSeed(<{ getTime }>)",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24551",
        "pattern": "#.setSeed(<[..]>)",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24552",
        "pattern": "new Random().<[^next]>",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24553",
        "pattern": "#.setAccessible(true)",
        "filenameWildcard": "",
        "programmingLanguages": 14340,
        "dataFormat": 1
    },
    {
        "key": "24554",
        "pattern": "<[\"http://\"]>",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24555",
        "pattern": "try catch(NullPointerException ) {...}",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24556",
        "pattern": "System.exit(...);",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24557",
        "pattern": "#.dump((System.)?out);",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24558",
        "pattern": "#.run();",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24559",
        "pattern": "<[Thread]>(...)",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24560",
        "pattern": "<[[Tt]hread]>.start()",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24561",
        "pattern": "class : <[X509TrustManager|SSLSocketFactory]> {\n\t<{ (<[\\w+]>() {}) <|>\n\t(<[\\w+]>() { return null }) <|>\n\t(<[\\w+]>() { <{ throw new UnsupportedOperationException(<[\".*\"]>) }> }) }>\n}",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24562",
        "pattern": "(field <[ [Ll]og ]> <[ .+ ]>) <&> (<~>(field static final <[ [Ll]og ]> <[ .+ ]>))",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24563",
        "pattern": "main() {...}",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24564",
        "pattern": "(clone() {...}) <&> (<~>( clone() { <{ base.clone() }> } ))",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24565",
        "pattern": "(finalize() {...}) <&> (<~>( finalize() { <{ base.finalize() }> } ))",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24566",
        "pattern": "(\r\n  (class {\r\n    <{ equals() {...} }>\r\n  })\r\n  <&>\r\n  (<~>\r\n    (class {\r\n      <{ hashCode() {...} }>\r\n    })\r\n  )\r\n)\r\n<|>\r\n(\r\n  (class {\r\n    <{ hashCode() {...} }>\r\n  })\r\n  <&>\r\n  (<~>\r\n    (class {\r\n      <{ equals() {...} }>\r\n    })\r\n  )\r\n)",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24567",
        "pattern": "(class { <{ clone() { ... } }> }) <&> (<~>( class : Cloneable {} ))",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "24568",
        "pattern": "(class : SecurityManager {}) \r\n<&> \r\n(<~>(final class {})) \r\n<&> \r\n(class { <{ ( (<[.+]>() {...}) <&> (<~>(final <[.+]>() {...}))) }> })",
        "filenameWildcard": "",
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "305",
        "pattern": "{\n\"Kind\": \"PatternRoot\",\n\"Key\": \"305\",\n\"Languages\": \"ObjectiveC,C,CPlusPlus\",\n\"DataFormat\": \"Json\",\n\"DebugInfo\": \"Using RSA without OAEP\",\n\"Node\": {\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"CryptEncrypt\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternNot\",\n\"Pattern\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 64\n}\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n}\n}",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 0
    },
    {
        "key": "96",
        "pattern": "((#.)?<[(?i)(password|^pass|pwd)]> == (<[\".+\"]>)) <|> ((#.)?<[(?i)(password|^pass|pwd)]> != (<[\".+\"]>)) <|> ((#.)?<[(?i)(password|^pass|pwd)]> = <[\".*\" || null]>)",
        "filenameWildcard": "",
        "programmingLanguages": 129823,
        "dataFormat": 1
    },
    {
        "key": "97",
        "pattern": "<[^(mt_rand|rand|uniqid|shuffle|lcg_value)$(?-i)]>(...)",
        "filenameWildcard": "",
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "98",
        "pattern": "<[\"^http://[\\w@][\\w.:@]+/?[\\w\\.?=%&=\\-@/$,]*$\"]>",
        "filenameWildcard": null,
        "programmingLanguages": 30743,
        "dataFormat": 1
    },
    {
        "key": "99",
        "pattern": "<[^header$]>(<[\"Access-Control-Allow-Origin:\\s*\\*\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "Attributes Code Inside addEventListener",
        "pattern": "#.setAttributeNS(<[\"\"]>, <[\"^on\"]>,\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Attributes Code Inside attachEvent",
        "pattern": "<[\\w+]>.attachEvent(<[\"^on\"]>, function {\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>\n})",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Attributes Code Inside createAttribute",
        "pattern": "document.createAttribute(<[\"^on\"]>).value = \n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Attributes Code Inside Element Event",
        "pattern": "#.<[^on]> = function {\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>\n}",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Attributes Code Inside setAttribute",
        "pattern": "#.setAttribute(<[\"^on\"]>,\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Attributes Code Inside setAttributeNS",
        "pattern": "#.setAttributeNS(<[\"\"]>, <[\"^on\"]>,\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Buffer overflow",
        "pattern": "#.recvfrom_into(...)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Buffer Overflow PM",
        "pattern": "Buffer Overflow PM",
        "filenameWildcard": null,
        "programmingLanguages": 14464,
        "dataFormat": 1
    },
    {
        "key": "Cursor Snarfing PLSQL",
        "pattern": "<[@cursor]> = DBMS_SQL.OPEN_CURSOR;\n<[~]>DBMS_SQL.CLOSE_CURSOR(<[@cursor]>);",
        "filenameWildcard": null,
        "programmingLanguages": 256,
        "dataFormat": 1
    },
    {
        "key": "Dangerous Function PLSQL",
        "pattern": "DBMS_UTILITY.EXEC_DDL_STATEMENT(...)",
        "filenameWildcard": null,
        "programmingLanguages": 256,
        "dataFormat": 1
    },
    {
        "key": "Dangerous Function TSQL",
        "pattern": "xp_cmdshell(...)",
        "filenameWildcard": null,
        "programmingLanguages": 512,
        "dataFormat": 1
    },
    {
        "key": "Debug Information leakage",
        "pattern": "settings.configure(DEBUG=True) <|> app.run(debug=True)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Deprecated functions ObjC",
        "pattern": "<[^(alloca|cbc_crypt|getpass|gets|des_crypt|des_setparity|ecb_crypt|fgetchar|lstrcpy|lstrcat|memcpy|memmove|mktemp|printf|scanf|sprintf|sscanf|strcat|StrCat|strcpy|StrCpy|strlen|StrLen|strncat|StrNCat|strncpy|StrNCpy|strtok|swprintf|vsprintf|vswprintf|wcscat|wcscpy|wcslen|wcsncat|wcsncpy|wcstok|wmemcpy|wmemmove|_mbscpy|_memccpy|_mktemp|_tcscpy|_wmktemp)$]>(...) <|> <[:handleOpenURL:]>(...) <|> <[.*]>.<[openURL|canOpenURL]>(#*)",
        "filenameWildcard": null,
        "programmingLanguages": 30720,
        "dataFormat": 1
    },
    {
        "key": "DirectoryTraversalCreateReadStream",
        "pattern": "{\n    \"Kind\": \"PatternRoot\",\n    \"Key\": \"DirectoryTraversalCreateReadStream\",\n    \"Languages\": \"JavaScript\",\n    \"DataFormat\": \"Json\",\n    \"Node\": {\n      \"Kind\": \"PatternAssignmentExpression\",\n      \"Left\": {\n        \"Kind\": \"PatternAny\"\n      },\n      \"Right\": {\n        \"Kind\": \"PatternInvocationExpression\",\n        \"Target\": {\n          \"Kind\": \"PatternMemberReferenceExpression\",\n          \"Target\": {\n            \"Kind\": \"PatternOr\",\n            \"Patterns\": [\n              {\n                \"Kind\": \"PatternInvocationExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"require\"\n                },\n                \"Arguments\": {\n                  \"Kind\": \"PatternArgs\",\n                  \"Args\": [\n                    {\n                      \"Kind\": \"PatternStringLiteral\",\n                      \"String\": \"fs\"\n                    }\n                  ]\n                }\n              },\n              {\n                \"Kind\": \"PatternIdToken\",\n                \"Id\": \"fs\"\n              }\n            ]\n          },\n          \"Name\": {\n            \"Kind\": \"PatternIdToken\",\n            \"Id\": \"createReadStream\"\n          }\n        },\n        \"Arguments\": {\n          \"Kind\": \"PatternArgs\",\n          \"Args\": [\n            {\n              \"Kind\": \"PatternOr\",\n              \"Patterns\": [\n                {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternMemberReferenceExpression\",\n                    \"Target\": {\n                      \"Kind\": \"PatternIdToken\",\n                      \"Id\": \"req\"\n                    },\n                    \"Name\": {\n                      \"Kind\": \"PatternIdToken\",\n                      \"Id\": \"query\"\n                    }\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternAny\"\n                  }\n                },\n                {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"query\"\n                  }\n                },\n                {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternMemberReferenceExpression\",\n                    \"Target\": {\n                      \"Kind\": \"PatternIdToken\",\n                      \"Id\": \"req\"\n                    },\n                    \"Name\": {\n                      \"Kind\": \"PatternIdToken\",\n                      \"Id\": \"body\"\n                    }\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternAny\"\n                  }\n                },\n                {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"body\"\n                  }\n                },\n                {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternMemberReferenceExpression\",\n                    \"Target\": {\n                      \"Kind\": \"PatternIdToken\",\n                      \"Id\": \"req\"\n                    },\n                    \"Name\": {\n                      \"Kind\": \"PatternIdToken\",\n                      \"Id\": \"param\"\n                    }\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternAny\"\n                  }\n                },\n                {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"param\"\n                  }\n                }\n              ]\n            },\n            {\n              \"Kind\": \"PatternMultipleExpressions\"\n            }\n          ]\n        }\n      }\n    }\n}",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 0
    },
    {
        "key": "DirectoryTraversalReadFile",
        "pattern": "{\n    \"Kind\": \"PatternRoot\",\n    \"Key\": \"DirectoryTraversalReadFile\",\n    \"Languages\": \"JavaScript\",\n    \"DataFormat\": \"Json\",\n    \"Node\": {\n      \"Kind\": \"PatternInvocationExpression\",\n      \"Target\": {\n        \"Kind\": \"PatternMemberReferenceExpression\",\n        \"Target\": {\n          \"Kind\": \"PatternOr\",\n          \"Patterns\": [\n            {\n              \"Kind\": \"PatternInvocationExpression\",\n              \"Target\": {\n                \"Kind\": \"PatternIdToken\",\n                \"Id\": \"require\"\n              },\n              \"Arguments\": {\n                \"Kind\": \"PatternArgs\",\n                \"Args\": [\n                  {\n                    \"Kind\": \"PatternStringLiteral\",\n                    \"String\": \"fs\"\n                  }\n                ]\n              }\n            },\n            {\n              \"Kind\": \"PatternIdToken\",\n              \"Id\": \"fs\"\n            }\n          ]\n        },\n        \"Name\": {\n          \"Kind\": \"PatternIdToken\",\n          \"Id\": \"readFile\"\n        }\n      },\n      \"Arguments\": {\n        \"Kind\": \"PatternArgs\",\n        \"Args\": [\n          {\n            \"Kind\": \"PatternOr\",\n            \"Patterns\": [\n              {\n                \"Kind\": \"PatternIdToken\",\n                \"Id\": \"req\"\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"query\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"query\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"body\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"body\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"param\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"param\"\n                }\n              }\n            ]\n          },\n          {\n            \"Kind\": \"PatternMultipleExpressions\"\n          }\n        ]\n      }\n    }\n}",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 0
    },
    {
        "key": "Disabling SSL certificate checks",
        "pattern": "requests.get(#, verify=False)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Disabling SSL certificate checks C",
        "pattern": "<[^(SSL_CTX_set_verify|SSL_set_verify)$]>(#, 0, #)",
        "filenameWildcard": null,
        "programmingLanguages": 30720,
        "dataFormat": 1
    },
    {
        "key": "DOM Modification Contextual Fragment",
        "pattern": "document.createRange().createContextualFragment(<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "DOM Modification HTML Tag",
        "pattern": "#.<[^(inner|outer)HTML$]> = <{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "DOM Modification Selected Position",
        "pattern": "#.insertAdjacentHTML(#,\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>\n)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "DOM Modification String Inside Document",
        "pattern": "document.<[write(ln)?]>(<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Embedded Malicious Code",
        "pattern": "<[SetFileTime]>(...)",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 1
    },
    {
        "key": "Empty Default Exception Handler",
        "pattern": "try catch { }",
        "filenameWildcard": null,
        "programmingLanguages": 66327,
        "dataFormat": 1
    },
    {
        "key": "Erroneous Null Comparison",
        "pattern": "# == null <[||]> # != null",
        "filenameWildcard": null,
        "programmingLanguages": 768,
        "dataFormat": 1
    },
    {
        "key": "Exposure of System Data to an Unauthorized Control Sphere",
        "pattern": "#.PrintStackTrace(#*)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "File Snarfing PLSQL",
        "pattern": "<[@file]> =UTL_FILE.FOPEN(...);\n<[~]>UTL_FILE.FCLOSE(<[@file]>);",
        "filenameWildcard": null,
        "programmingLanguages": 256,
        "dataFormat": 1
    },
    {
        "key": "Format String PM",
        "pattern": "<[^(printf|NSLog|stringByAppendingFormat)$]>(<~><[\"\"]>, #*) <|> <[^((s|f)printf)$]>(#, <~><[\"\"]>, #*) <|> <[^(snprintf)$]>(#, #, <~><[\"\"]>) <|> <[^(syslog)$]>(#, <~><[\"\"]>, #*) <|> <[^(_vprintf|vprintf)$]>(<~><[\"\"]>, #)",
        "filenameWildcard": null,
        "programmingLanguages": 30720,
        "dataFormat": 1
    },
    {
        "key": "Forwarding via location",
        "pattern": "((#.)?location <|> #.location.href) = <{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Forwarding via location function",
        "pattern": "#.location.<[replace|assign]>(<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Forwarding via opening new tab",
        "pattern": "window.<[open|navigate|showModalDialog]>(<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Hardcoded Initialization Vector",
        "pattern": "AES.<[new]>(...,AES.MODE_CBC,...,<[(?i)iv]> = <[\".+\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Hardcoded key",
        "pattern": "<[.*]>.<[encryptData]>(#,#, <[\"\"]>, #*) <|> <[.*]>.<[decryptData]>(#,<[\"\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 24576,
        "dataFormat": 1
    },
    {
        "key": "Hardcoded PBKDF password",
        "pattern": "<[^(CCKeyDerivationPBKDF)$]>(<[^(kCCPBKDF2)$]>, <[\"\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 8192,
        "dataFormat": 1
    },
    {
        "key": "HeaderInjection",
        "pattern": "res.set(#, <{req<|>req.query<|>req.body<|>req.param}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Improper Access Control С",
        "pattern": "{\n\"Kind\": \"PatternRoot\",\n\"Key\": \"Improper Access Control С\",\n\"Languages\": \"ObjectiveC,C,CPlusPlus\",\n\"DataFormat\": \"Json\",\n\"DebugInfo\": \"Improper Access Control\",\n\"Node\": {\n\"Kind\": \"PatternOr\",\n\"Patterns\": [\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"CreateDesktop(A|W)\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 268435456\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n},\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"CreateFile(A|W)\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 983040\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 1048576\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 511\n}\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n},\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"CreateNamedPipe(A|W)\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 3\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n},\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"CreateWindowStation(A|W)\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 268435456\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n},\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"RegCreateKeyEx(A|W)\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 2031616\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 1\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 2\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 4\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 8\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 16\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 32\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseAnd\"\n},\n\"Right\": {\n\"Kind\": \"PatternUnaryOperatorExpression\",\n\"Expression\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 1048576\n},\n\"Operator\": {\n\"Kind\": \"PatternUnaryOperatorLiteral\",\n\"UnaryOperator\": \"BitwiseNot\"\n}\n}\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n},\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"SHRegCreateUSKeyA\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 2031616\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 1\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 2\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 4\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 8\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 16\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 32\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseAnd\"\n},\n\"Right\": {\n\"Kind\": \"PatternUnaryOperatorExpression\",\n\"Expression\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 1048576\n},\n\"Operator\": {\n\"Kind\": \"PatternUnaryOperatorLiteral\",\n\"UnaryOperator\": \"BitwiseNot\"\n}\n}\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n}\n]\n}\n}",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 0
    },
    {
        "key": "Incorrect Permission Assignment For Critical Resource 1",
        "pattern": "#.Exec(<[\"chmod [24]?777\"]>, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Incorrect Unix API using",
        "pattern": "<[^(malloc)$]>(0)",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 1
    },
    {
        "key": "IncorrectPermissionAssignmentPHP",
        "pattern": "chmod(#, <[0777 || 02777 || 04777]>)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "Information Exposure PM",
        "pattern": "<[(?i)(print|dump)]>(#*, <[(?i)(password|env)]> <|> <[getenv]>(...),  #*)",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 1
    },
    {
        "key": "Information Exposure Through Persistent Cookies 1",
        "pattern": "#.SetMaxAge(<[3600..]>);",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Insecure cipher key export",
        "pattern": "#.exportKey(format=\"PEM\")",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Insecure connection protocol",
        "pattern": "#.StrOpt(..., default = \"http\")",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Insecure Cookie 1",
        "pattern": "(<[expr]>.)?<[[cC]ookie]>.SetPath(<[\"^/?$\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Insecure Cookie 2",
        "pattern": "(<[expr]>.)?<[[cC]ookie]>.SetDomain(<[\"^.?[a-zA-Z0-9\\-]+\\.[a-zA-Z0-9\\-]+$\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Insecure data Storage ObjC simple",
        "pattern": "#.<[writeToFile:options:]>(#, <[^(NSFileProtectionNone|\nNSDataWritingFileProtectionNone)$]>)",
        "filenameWildcard": null,
        "programmingLanguages": 0,
        "dataFormat": 1
    },
    {
        "key": "Insecure Randomness OjbC",
        "pattern": "<[^(erand48|jrand48|lcong48|nrand48|seed48|strfry|rand|random)$]>(...) <|> <[^(arc4random|arc4random_uniform|drand48|lrand48|mrand48|srandom)$]>()",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 1
    },
    {
        "key": "Insecure Randomness PLSQL",
        "pattern": "Null dereference PM",
        "filenameWildcard": null,
        "programmingLanguages": 128,
        "dataFormat": 1
    },
    {
        "key": "Insecure Randomness TSQL",
        "pattern": "rand(...)",
        "filenameWildcard": null,
        "programmingLanguages": 512,
        "dataFormat": 1
    },
    {
        "key": "Insecure RSA Padding 1",
        "pattern": "(Javax.Crypto.)?Cipher.GetInstance(<[\"RSA/ECB/PKCS1Padding\" || \"NoPadding$\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Insecure SSL connection 1",
        "pattern": "new AllowAllHostnameVerifier(...) <[||]> SSLSocketFactory.AllowAllHostnameVerifier",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Insecure SSL Protocol",
        "pattern": "#(..., ssl_version=<[^(PROTOCOL_SSLv2|SSLv2_METHOD|SSLv23_METHOD|PROTOCOL_SSLv3|PROTOCOL_TLSv1|SSLv3_METHOD|TLSv1_METHOD)$]>, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Insecure usage of jinja templates",
        "pattern": "(jinja2.)?Environment(..., autoescape=False, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Insecure usage of mako templates",
        "pattern": "(mako.)?template.Template(#)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Insecure Validation Functions 1",
        "pattern": "<[expr]>.<[^(CheckCallingOrSelfPermission|CheckCallingOrSelfUriPermission)$]>(...)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Insecure work with temporary files",
        "pattern": "open(<[\"(?i)\/tmp\"]> <|> tempfile.mktemp(), #)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Insufficient Encryption Key Length 1",
        "pattern": "KeyPairGenerator <[@keyGen]> = KeyPairGenerator.GetInstance(#);\n<[@keyGen]>.Initialize(<[0..2048]>);",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Insufficient Logging&Monitoring",
        "pattern": "sys.stderr.write(...)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "InsufficientEncryptionKeyLength",
        "pattern": "KeyPairGenerator <[@keyGen]> = KeyPairGenerator.getInstance(#);\n<[@keyGen]>.initialize(<[0..2048]>);",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "JQuery function that adds element",
        "pattern": "#.attr(<[\"^on\"]>,\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>\n)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "JQuery function that replaces element",
        "pattern": "#.replaceWith(\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>\n)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "JQuery HTML Inside DOM",
        "pattern": "$(\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>\n)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "JQuery Unsafe functions for DOM",
        "pattern": "#.<[^(html|prepend(To)?|append(To)?|after|before)$]>(\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>\n)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "JQuery Wrap Element to HTML",
        "pattern": "#.<[^(wrap(All|Inner)?)$]>(\n<{\ndocument.<[^(URL|referrer|cookie)$]> <|>\ndocument.location.<[^(pathname|href|search|hash)$]> <|>\nwindow.name <|>\nwindow.<[^(top|frames)$]>.document.<[\\w+]>.<[\\w+]>\n}>\n)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Least privilege Violation",
        "pattern": "{\n\"Kind\": \"PatternRoot\",\n\"Key\": \"Least privilege Violation\",\n\"Languages\": \"ObjectiveC,C,CPlusPlus\",\n\"DataFormat\": \"Json\",\n\"DebugInfo\": \"Least privilege Violation\",\n\"Node\": {\n\"Kind\": \"PatternOr\",\n\"Patterns\": [\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"SHRegCreateUSKey(A|W)\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternNot\",\n\"Pattern\": {\n\"Kind\": \"PatternOr\",\n\"Patterns\": [\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 1\n},\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 2\n}\n]\n}\n}\n]\n}\n},\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"^(RegOpenKeyExA|RegOpenKeyExW)$\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternNot\",\n\"Pattern\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": -2147483647\n}\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n},\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"SHRegOpenUSKey(A|W)\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternNot\",\n\"Pattern\": {\n\"Kind\": \"PatternIntLiteral\"\n}\n}\n]\n}\n},\n{\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"^(RegCreateKeyA|RegCreateKeyW|RegCreateKeyExA|RegCreateKeyExW)$\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternNot\",\n\"Pattern\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": -2147483647\n}\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n}\n]\n}\n}",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 0
    },
    {
        "key": "Missing auth localized reason",
        "pattern": "#.<[evaluatePolicy:localizedReason]>(#, null, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 24576,
        "dataFormat": 1
    },
    {
        "key": "NoTLSReject",
        "pattern": "process.env.NODE_TLS_REJECT_UNAUTHORIZED = <[\"^0$\"]>",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "NSLog using",
        "pattern": "<[^(NSLog)$]>(...)",
        "filenameWildcard": null,
        "programmingLanguages": 24576,
        "dataFormat": 1
    },
    {
        "key": "Null dereference pattern",
        "pattern": "Null dereference PM",
        "filenameWildcard": null,
        "programmingLanguages": 128,
        "dataFormat": 1
    },
    {
        "key": "Null PBKDF password",
        "pattern": "<[^(CCKeyDerivationPBKDF)$]>(<[^(kCCPBKDF2)$]>, null, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 8192,
        "dataFormat": 1
    },
    {
        "key": "Obsolet function",
        "pattern": "smtplib.SMTP(...) <|> rsa.verify(...)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "OpenRedirect",
        "pattern": "res.redirect(..., <{req<|>req.query<|>req.body<|>req.param}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "Overly Broad Grant",
        "pattern": "grant_all(...)",
        "filenameWildcard": null,
        "programmingLanguages": 768,
        "dataFormat": 1
    },
    {
        "key": "Plaintext Storage of a Password 1",
        "pattern": "#.GetProperty(\"password\");",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Play 1 HTML XSS",
        "pattern": "<[\"&{\\w+}\"]>",
        "filenameWildcard": "**app/views/*.html",
        "programmingLanguages": 8,
        "dataFormat": 1
    },
    {
        "key": "Play 2 HTML XSS",
        "pattern": "<[\"@Html\\(\\w+\\)\"]>",
        "filenameWildcard": "**app/views/*.html",
        "programmingLanguages": 8,
        "dataFormat": 1
    },
    {
        "key": "Possible RCE through SQL Injection",
        "pattern": "<[\"_GET\\[.*?\\]\"]>",
        "filenameWildcard": null,
        "programmingLanguages": 768,
        "dataFormat": 1
    },
    {
        "key": "Python Weak Cryptographic Hash",
        "pattern": "pbkdf2_hmac(\"md5\", ...) <|> hashlib.<[new]>(<[\"(?i)MD5\"]>) <|> hashlib.<[md5|sha1]>(#) <|> ECB(#) <|> <[pycrypto(domex)?_(md2|md3|md4|md5|sha)]>.<[new]>() <|> hashes.<[MD5|SHA1]>()",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "ReflectedCrossSiteScripting",
        "pattern": "{\n    \"Kind\": \"PatternRoot\",\n    \"Key\": \"ReflectedCrossSiteScripting\",\n    \"Languages\": \"JavaScript\",\n    \"DataFormat\": \"Json\",\n    \"Node\": {\n      \"Kind\": \"PatternInvocationExpression\",\n      \"Target\": {\n        \"Kind\": \"PatternMemberReferenceExpression\",\n        \"Target\": {\n          \"Kind\": \"PatternIdToken\",\n          \"Id\": \"res\"\n        },\n        \"Name\": {\n          \"Kind\": \"PatternIdRegexToken\",\n          \"Regex\": \"^(send|write)$\"\n        }\n      },\n      \"Arguments\": {\n        \"Kind\": \"PatternArgs\",\n        \"Args\": [\n          {\n            \"Kind\": \"PatternOr\",\n            \"Patterns\": [\n              {\n                \"Kind\": \"PatternIdToken\",\n                \"Id\": \"req\"\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"query\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"query\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"body\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"body\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"param\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"param\"\n                }\n              }\n            ]\n          }\n        ]\n      }\n    }\n}",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 0
    },
    {
        "key": "Return of Stack Variable Address",
        "pattern": "_",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 1
    },
    {
        "key": "Reversible One Way Hash",
        "pattern": "{\n\"Kind\": \"PatternRoot\",\n\"Key\": \"Reversible One Way Hash\",\n\"Languages\": \"ObjectiveC,C,CPlusPlus\",\n\"DataFormat\": \"Json\",\n\"DebugInfo\": \"Reversible One Way Hash\",\n\"Node\": {\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"CryptCreateHash\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 4\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"ShiftLeft\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 13\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\"\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternOr\",\n\"Patterns\": [\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 1\n},\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 3\n},\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 4\n}\n]\n}\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n}\n}",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 0
    },
    {
        "key": "Sensitive Cookie in HTTPS Session Without ‘Secure’ Attribute",
        "pattern": "Cookie <[@cookie]> = new Cookie(...);\n<[~]><[@cookie]>.SetSecure(true);\n#.AddCookie(<[@cookie]>);",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "ServerSideInjectionEval",
        "pattern": "eval(<{req<|>req.query<|>req.body<|>req.param}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "ServerSideInjectionFunction",
        "pattern": "new Function(..., <{req<|>req.query<|>req.body<|>req.param}>)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "ServerSideInjectionSetInterval",
        "pattern": "setTimeout(<{req<|>req.query<|>req.body<|>req.param}>, #, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "ServerSideInjectionSetTimeout",
        "pattern": "setInterval(<{req<|>req.query<|>req.body<|>req.param}>, #, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "ServerSideInjectionYaml",
        "pattern": "{\n    \"Kind\": \"PatternRoot\",\n    \"Key\": \"ServerSideInjectionYaml\",\n    \"Languages\": \"JavaScript\",\n    \"DataFormat\": \"Json\",\n    \"Node\": {\n      \"Kind\": \"PatternInvocationExpression\",\n      \"Target\": {\n        \"Kind\": \"PatternMemberReferenceExpression\",\n        \"Target\": {\n          \"Kind\": \"PatternOr\",\n          \"Patterns\": [\n            {\n              \"Kind\": \"PatternInvocationExpression\",\n              \"Target\": {\n                \"Kind\": \"PatternIdToken\",\n                \"Id\": \"require\"\n              },\n              \"Arguments\": {\n                \"Kind\": \"PatternArgs\",\n                \"Args\": [\n                  {\n                    \"Kind\": \"PatternStringRegexLiteral\",\n                    \"Regex\": \"^js-yaml$\"\n                  }\n                ]\n              }\n            },\n            {\n              \"Kind\": \"PatternIdToken\",\n              \"Id\": \"yaml\"\n            }\n          ]\n        },\n        \"Name\": {\n          \"Kind\": \"PatternIdToken\",\n          \"Id\": \"load\"\n        }\n      },\n      \"Arguments\": {\n        \"Kind\": \"PatternArgs\",\n        \"Args\": [\n          {\n            \"Kind\": \"PatternOr\",\n            \"Patterns\": [\n              {\n                \"Kind\": \"PatternIdToken\",\n                \"Id\": \"req\"\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"query\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"query\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"body\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"body\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternMemberReferenceExpression\",\n                  \"Target\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"req\"\n                  },\n                  \"Name\": {\n                    \"Kind\": \"PatternIdToken\",\n                    \"Id\": \"param\"\n                  }\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternAny\"\n                }\n              },\n              {\n                \"Kind\": \"PatternMemberReferenceExpression\",\n                \"Target\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"req\"\n                },\n                \"Name\": {\n                  \"Kind\": \"PatternIdToken\",\n                  \"Id\": \"param\"\n                }\n              }\n            ]\n          },\n          {\n            \"Kind\": \"PatternMultipleExpressions\"\n          }\n        ]\n      }\n    }\n  }",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 0
    },
    {
        "key": "SSL configuration flaws",
        "pattern": "<[^(kCFStreamSSLPeerName|AFSSLPinningModeNone|setAllowInvalidCertificates|kCFStreamSSLAllowsAnyRoot|kCFStreamSSLAllowsExpiredCertificates|kCFStreamSSLAllowsExpiredRoots|setAllowsAnyHTTPSCertificate|continueWithoutCredentialForAuthenticationChallenge)$]>",
        "filenameWildcard": null,
        "programmingLanguages": 8192,
        "dataFormat": 1
    },
    {
        "key": "Type Confusion",
        "pattern": "_",
        "filenameWildcard": null,
        "programmingLanguages": 30720,
        "dataFormat": 1
    },
    {
        "key": "Unreachable Code",
        "pattern": "_",
        "filenameWildcard": null,
        "programmingLanguages": 30720,
        "dataFormat": 1
    },
    {
        "key": "Unsafe cross-origin resource sharing",
        "pattern": "#.setHeader(\"Access-Control-Allow-Origin\", \"*\")",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Unsalted One Way Hash 1",
        "pattern": "MessageDigest <[@hash]> = MessageDigest.GetInstance(\"SHA-512\");\n<[~]><[@hash]>.Update(#);",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "UnsaltedOneWayHash",
        "pattern": "MessageDigest <[@hash]> = MessageDigest.getInstance(\"SHA-512\");\n<[~]><[@hash]>.update(#);",
        "filenameWildcard": null,
        "programmingLanguages": 4,
        "dataFormat": 1
    },
    {
        "key": "Unused var",
        "pattern": "_",
        "filenameWildcard": null,
        "programmingLanguages": 30720,
        "dataFormat": 1
    },
    {
        "key": "Use Broken Crypto",
        "pattern": "{\n\"Kind\": \"PatternRoot\",\n\"Key\": \"Use broken crypto\",\n\"Languages\": \"ObjectiveC,C,CPlusPlus\",\n\"DataFormat\": \"Json\",\n\"DebugInfo\": \"Use broken crypto\",\n\"Node\": {\n\"Kind\": \"PatternInvocationExpression\",\n\"Target\": {\n\"Kind\": \"PatternIdRegexToken\",\n\"Regex\": \"CryptDeriveKey\"\n},\n\"Arguments\": {\n\"Kind\": \"PatternArgs\",\n\"Args\": [\n{\n\"Kind\": \"PatternAny\"\n},\n{\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 3\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"ShiftLeft\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 13\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternBinaryOperatorExpression\",\n\"Left\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 3\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"ShiftLeft\"\n},\n\"Right\": {\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 9\n}\n}\n},\n\"Operator\": {\n\"Kind\": \"PatternBinaryOperatorLiteral\",\n\"BinaryOperator\": \"BitwiseOr\"\n},\n\"Right\": {\n\"Kind\": \"PatternOr\",\n\"Patterns\": [\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 1\n},\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 3\n},\n{\n\"Kind\": \"PatternIntLiteral\",\n\"Value\": 13\n}\n]\n}\n},\n{\n\"Kind\": \"PatternMultipleExpressions\"\n}\n]\n}\n}\n}",
        "filenameWildcard": null,
        "programmingLanguages": 14336,
        "dataFormat": 0
    },
    {
        "key": "Use of a Broken or Risky Cryptographic Algorithm 1",
        "pattern": "mcrypt_encrypt(<[MCRYPT_DES || \"des\"]>, #, #, <[MCRYPT_MODE_ECB || \"ecb\"]>, #)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "Use of a Broken or Risky Cryptographic Algorithm 2",
        "pattern": "mcrypt_decrypt(<[MCRYPT_DES || \"des\"]>, #, #, <[MCRYPT_MODE_ECB || \"ecb\"]>, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "Use of a Broken or Risky Cryptographic Algorithm 3",
        "pattern": "mcrypt_get_block_size(<[MCRYPT_DES || \"des\"]>, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "Use of a Broken or Risky Cryptographic Algorithm 4",
        "pattern": "mcrypt_get_key_size(<[MCRYPT_DES || \"des\"]>, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "Use of a Broken or Risky Cryptographic Algorithm 5",
        "pattern": "mcrypt_get_iv_size(#, <[MCRYPT_MODE_ECB || \"ecb\"]>)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "Use of a Broken or Risky Cryptographic Algorithm 6",
        "pattern": "mcrypt_module_open(<[MCRYPT_DES || \"des\"]>, #, <[MCRYPT_MODE_ECB || \"ecb\"]>, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "Use of Insufficiently Random Values 1",
        "pattern": "#.SetSeed(<[..]>)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Use of Insufficiently Random Values 2",
        "pattern": "#.SetSeed(<{ GetTime }>)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Use of Obsolete Function 1",
        "pattern": "mcrypt_get_block_size <|> mcrypt_decrypt <|> mcrypt_encrypt <|> mcrypt_get_key_size <|> mcrypt_module_open <|> mcrypt_get_iv_size",
        "filenameWildcard": null,
        "programmingLanguages": 2,
        "dataFormat": 1
    },
    {
        "key": "User Driven Insecure Hash Algorithm 1",
        "pattern": "<[ [Ss]tring ]> <[@hashAlgorithm]> = <[(request | ^req$)]>. GetParameter(...); MessageDigest.GetInstance(<[@hashAlgorithm]>);",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Weak Crypto API ObjC",
        "pattern": "<[^(CC_MD2_Init|CC_MD2_Update|CC_MD2_Final|CC_MD2|MD2_Init|MD2_Update|MD2_Final|MD2|CC_MD4_Init|CC_MD4_Update|CC_MD4_Final|CC_MD4|MD4_Init|MD4_Update|MD4_Final|MD4|CC_MD5_Init|CC_MD5_Update|CC_MD5_Final|CC_MD5|MD5_Init|MD5_Update|MD5_Final|MD5Init|MD5Update|MD5Final|MD5|CC_SHA1_Init|CC_SHA1_Update|CC_SHA1_Final|CC_SHA1|SHA1_Init|SHA1_Update|SHA1_Final|SHA1)$]>(#*) <|> <[\"CCHmac\"]>(<[^(kCCHmacAlgSHA1|kCCHmacAlgMD5)$]>,#*)",
        "filenameWildcard": null,
        "programmingLanguages": 30720,
        "dataFormat": 1
    },
    {
        "key": "Weak Crypto Hash Api ObjC",
        "pattern": "<[^(CCCrypt|CCCryptorCreate)$]>(#,<[^(kCCAlgorithmDES|kCCAlgorithm3DES|kCCAlgorithmRC2|kCCAlgorithmRC4)$]>,#*) <|> <[^(CCCrypt|CCCryptorCreate)$]>(#, #, <[^(kCCOptionECBMode|kCCOptionCBCMode)$]>,#*)",
        "filenameWildcard": null,
        "programmingLanguages": 8192,
        "dataFormat": 1
    },
    {
        "key": "Weak crypto IV ObjC",
        "pattern": "<[^(CCCrypt|CCCryptorCreate)$]>(#, #,#, #, #, <[null||\"\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 0,
        "dataFormat": 1
    },
    {
        "key": "Weak crypto key ObjC",
        "pattern": "<[^(CCCrypt|CCCryptorCreate)$]>(#, #,#,  <[null||\"\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 8192,
        "dataFormat": 1
    },
    {
        "key": "Weak crypto password",
        "pattern": "<[^(CCCrypt|CCCryptorCreate)$]>(#, #, #,<[null||\"\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 0,
        "dataFormat": 1
    },
    {
        "key": "Weak Cryptographic Algorithm 1",
        "pattern": "(<[^(j|J)avax]>.<[^(c|C)rypto]>.)?Cipher.getInstance(<[ \"(?i)[DES](/CBC/PKCS5Padding){0,1}\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 1,
        "dataFormat": 1
    },
    {
        "key": "Weak Cryptographic Hash PLSQL",
        "pattern": "dbms_crypto.hash_sh1 <[||]> DBMS_OBFUSCATION_TOOLKIT.<[^(md2|md4|md5)$]>(...)",
        "filenameWildcard": null,
        "programmingLanguages": 256,
        "dataFormat": 1
    },
    {
        "key": "Weak Cryptographic Hash TSQL",
        "pattern": "HashBytes(<[\"(?i)^(md2|md4|md5)$\"]>, ...)",
        "filenameWildcard": null,
        "programmingLanguages": 512,
        "dataFormat": 1
    },
    {
        "key": "Weak HMAC key ObjC",
        "pattern": "<[CCHmac]>(#, <[null||\"\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 0,
        "dataFormat": 1
    },
    {
        "key": "Weak PBKDF Salt",
        "pattern": "<[^(CCKeyDerivationPBKDF)$]>(<[^(kCCPBKDF2)$]>, #, #, <[null||\"\"]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 30720,
        "dataFormat": 1
    },
    {
        "key": "Weak RSA ObjC",
        "pattern": "<[SecKeyEncrypt]>(#, <[^(kSecPaddingOAEP)$]>, #*)",
        "filenameWildcard": null,
        "programmingLanguages": 8192,
        "dataFormat": 1
    },
    {
        "key": "WeakHashCrypto",
        "pattern": "{\n    \"Kind\": \"PatternRoot\",\n    \"Key\": \"WeakHashCrypto\",\n    \"Languages\": \"JavaScript\",\n    \"DataFormat\": \"Json\",\n    \"Node\": {\n      \"Kind\": \"PatternInvocationExpression\",\n      \"Target\": {\n        \"Kind\": \"PatternMemberReferenceExpression\",\n        \"Target\": {\n          \"Kind\": \"PatternOr\",\n          \"Patterns\": [\n            {\n              \"Kind\": \"PatternInvocationExpression\",\n              \"Target\": {\n                \"Kind\": \"PatternIdToken\",\n                \"Id\": \"require\"\n              },\n              \"Arguments\": {\n                \"Kind\": \"PatternArgs\",\n                \"Args\": [\n                  {\n                    \"Kind\": \"PatternStringLiteral\",\n                    \"String\": \"crypto\"\n                  }\n                ]\n              }\n            },\n            {\n              \"Kind\": \"PatternIdToken\",\n              \"Id\": \"crypto\"\n            }\n          ]\n        },\n        \"Name\": {\n          \"Kind\": \"PatternIdToken\",\n          \"Id\": \"createHash\"\n        }\n      },\n      \"Arguments\": {\n        \"Kind\": \"PatternArgs\",\n        \"Args\": [\n          {\n            \"Kind\": \"PatternStringRegexLiteral\",\n            \"Regex\": \"^(md5|sha1)$\"\n          }\n        ]\n      }\n    }\n}",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 0
    },
    {
        "key": "WeakHashCryptoJS",
        "pattern": "(CryptoJS.algo.)?HMAC.create((CryptoJS.algo.)?MD5, #)",
        "filenameWildcard": null,
        "programmingLanguages": 16,
        "dataFormat": 1
    },
    {
        "key": "WebView XSS",
        "pattern": "<{\n<[loadHTMLString]>\n}>(#, <[0 || null]>)",
        "filenameWildcard": null,
        "programmingLanguages": 24576,
        "dataFormat": 1
    },
    {
        "key": "XML External Entity PM",
        "pattern": "<[.*]>.<[setShouldResolveExternalEntities]>(1)",
        "filenameWildcard": null,
        "programmingLanguages": 8192,
        "dataFormat": 1
    },
    {
        "key": "XSS protection disabled",
        "pattern": "SECURE_BROWSER_XSS_FILTER = false",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    },
    {
        "key": "Yaml load",
        "pattern": "yaml.load(...)",
        "filenameWildcard": null,
        "programmingLanguages": 65536,
        "dataFormat": 1
    }
]