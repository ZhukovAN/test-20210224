ast.status.aborted = Scan was terminated
ast.status.error = Scan error
ast.status.failure = Scan complete, AST policy assessment failed
ast.status.policy.empty = Scan complete, AST policy not defined
ast.status.success = Scan complete, AST policy assessment success
ast.status.unknown = Unknown
ast.status.unstable = Scan complete, AST policy assessment success, but there were scan warnings or errors

captions.config.configCustom = Task scope defined PT AI server config
captions.config.configGlobal = Global scope defined PT AI server config
captions.config.displayName = PT AI configuration
captions.credentials.displayName = PT AI server authentication
captions.locale.english.displayName = English
captions.locale.russian.displayName = Russian
captions.plugin.displayName = PT AI vulnerability analysis
captions.scanSettingsManual.displayName = JSON-defined settings
captions.scanSettingsUi.displayName = PT AI Viewer UI-defined settings
captions.workMode.async.displayName = Asynchronous mode
captions.workMode.sync.displayName = Synchronous mode

exception.failedToGetEnvVars = Failed to get environment variables from build
exception.normalizeDirectory = Failed to normalize base directory [{0}]
i18n.ast.result.reporting.data.file.hint=File name where exported data will be saved to.
i18n.ast.result.reporting.data.file.label = File name
i18n.ast.result.reporting.data.file.message.empty=Export file name must not be empty.
i18n.ast.result.reporting.data.filter.hint = JSON-defined report generation filter that allows to define what vulnerabilities are to be included into report.
i18n.ast.result.reporting.data.filter.label = Vulnerability filter
i18n.ast.result.reporting.data.filter.message.invalid=Invalid filter format
i18n.ast.result.reporting.data.filter.message.invalid.details=Invalid filter format: {0}
i18n.ast.result.reporting.data.format.hint = Report file format.
i18n.ast.result.reporting.data.format.label = Format
i18n.ast.result.reporting.data.hint = PT AI will export AST results data in JSON or XML formats. You will need to define file name, format, locale and optional set of JSON filters.
i18n.ast.result.reporting.data.label = XML or JSON data file
i18n.ast.result.reporting.data.locale.hint = Report file locale
i18n.ast.result.reporting.data.locale.label = Locale
i18n.ast.result.reporting.json.hint=Advanced reporting settings that allow to use JSON-defined set of reports to be generated.
i18n.ast.result.reporting.json.label=JSON-defined reports
i18n.ast.result.reporting.json.message.file.parse.failed=JSON-defined reports file parse failed
i18n.ast.result.reporting.json.message.file.parse.failed.details=JSON-defined reports file parse failed: {0}.
i18n.ast.result.reporting.json.message.file.read.failed=JSON-defined reports file read failed
i18n.ast.result.reporting.json.settings.hint=JSON definition of reports to be generated and filters that are applied to scan results prior to report generation or data export
i18n.ast.result.reporting.json.settings.label=JSON settings
i18n.ast.result.reporting.json.settings.message.empty=JSON definition of reports must not be empty.
i18n.ast.result.reporting.json.settings.message.invalid=Invalid JSON definition of reports
i18n.ast.result.reporting.json.settings.message.invalid.details=Invalid JSON definition of reports: {0}
i18n.ast.result.reporting.rawdata.file.hint=File name where exported data will be saved to.
i18n.ast.result.reporting.rawdata.file.label = File name
i18n.ast.result.reporting.rawdata.file.message.empty=Export file name must not be empty
i18n.ast.result.reporting.rawdata.hint = PT AI will export raw AST results data in JSON format. You will need to define file name.
i18n.ast.result.reporting.rawdata.label = Raw AST data export
i18n.ast.result.reporting.report.file.hint = File name where generated report will be saved to.
i18n.ast.result.reporting.report.file.label = File name
i18n.ast.result.reporting.report.file.message.empty=Report file name must not be empty
i18n.ast.result.reporting.report.filter.hint = JSON-defined report generation filter that allows to define what vulnerabilities are to be included into report.
i18n.ast.result.reporting.report.filter.label = Vulnerability filter
i18n.ast.result.reporting.report.filter.message.invalid=Invalid filter format.
i18n.ast.result.reporting.report.filter.message.invalid.details=Invalid filter format: {0}.
i18n.ast.result.reporting.report.format.hint = Report file format.
i18n.ast.result.reporting.report.format.label = Format
i18n.ast.result.reporting.report.hint = PT AI will generate human-readable report in HTML or PDF formats. You will need to define file name, report template name, format, locale and optional set of JSON filters.
i18n.ast.result.reporting.report.label = HTML or PDF report
i18n.ast.result.reporting.report.locale.hint = Report file locale
i18n.ast.result.reporting.report.locale.label = Locale
i18n.ast.result.reporting.report.template.hint = Template name that is used for report generation.
i18n.ast.result.reporting.report.template.label = Template
i18n.ast.result.reporting.report.template.message.empty=Report template name must not be empty
i18n.ast.result.reporting.report.template.message.notdound.details=Report template not found. May be you mean {0}.
i18n.ast.result.reporting.report.template.message.notfound=Report template not found.
i18n.ast.result.status.failed = AST failed
i18n.ast.result.status.failed.policy = AST failed as policy assessment failed
i18n.ast.result.status.failed.server = AST failed due to PT AI server error
i18n.ast.result.status.failed.unstable = AST failed as there were minor errors during scan
i18n.ast.result.status.interrupted = AST interrupted
i18n.ast.result.status.success = AST success
i18n.ast.settings.mode=
i18n.ast.settings.mode.asynchronous=
i18n.ast.settings.mode.asynchronous.hint = Asynchronous work mode means that after starting AST job CI pipeline will continue its execution to next build step. AST policy assessment results do not have an impact on a build process. AST reports and results data are not generated during pipeline execution.
i18n.ast.settings.mode.asynchronous.label = Asynchronous mode
i18n.ast.settings.mode.hint = Work mode parameter defines CI behaviour after AST job is being started.
i18n.ast.settings.mode.label = Work mode
i18n.ast.settings.mode.synchronous=
i18n.ast.settings.mode.synchronous.hint = Synchronous mode means that CI pipeline will start AST job and wait for it to finish. Using this mode allows you to setup if build pipeline is to be terminated with failed state when AST policy assessment fails or there were minor errors and warnings during vulnerability analysis. This mode also allows to generate reports and export AST data to CI system workpace folder
i18n.ast.settings.mode.synchronous.label = Synchronous mode
i18n.ast.settings.server.ca.pem.hint = PEM-encoded PT AI server CA certificate chain. You may keep this field empty if accept non-trusted SSL certificates mode used or PT AI server certificate signed by certificate from your JRE truststore.
i18n.ast.settings.server.ca.pem.label = PT AI server CA certificates
i18n.ast.settings.server.ca.pem.message.file.read.failed=Truststore file read failed
i18n.ast.settings.server.ca.pem.message.parse.empty=Trusted certificates not found in PEM list
i18n.ast.settings.server.ca.pem.message.parse.failed.details=Truststore list parse failed: {0}
i18n.ast.settings.server.insecure.hint = This option explicitly allows plugin to perform "insecure" SSL connections with PT AI server. All SSL connections are attempted to be made secure by using the CA certificate bundle from JRE truststore or from explicitly defined certificate chain PEM file. This makes all connections considered "insecure" fail unless this option is used.
i18n.ast.settings.server.insecure.label = Accept non-trusted SSL certificates
i18n.ast.settings.server.token.hint = PT AI REST API client access token. Generate token using PT AI administrative web interface and place it in this field.
i18n.ast.settings.server.token.label = PT AI client token
i18n.ast.settings.server.token.message.empty = API token must not be empty.
i18n.ast.settings.server.url.hint = PT AI server URL, for example, https://ptai.domain.org:443
i18n.ast.settings.server.url.label = PT AI server URL
i18n.ast.settings.server.url.message.empty = PT AI server URL must not be empty.
i18n.ast.settings.server.url.message.invalid = PT AI server URL is not valid.
i18n.misc.enums.format.html.label=HTML
i18n.misc.enums.format.json.label=JSON
i18n.misc.enums.format.pdf.label=PDF
i18n.misc.enums.format.xml.label=XML
i18n.misc.enums.locale.english.label=English
i18n.misc.enums.locale.russian.label=Russian
i18n.validator.reporting.issuesfilter.incorrect = PT AI issues filter JSON parse failed

messages.error.generic = There was error during execution

plugin.logDefaultNodeUsed = No node name or tag assigned, using default value "{0}"
plugin.logReportDownloadFailed = Failed to download AST report report.{0}: {1}
plugin.result.ast.aborted = AST job aborted
plugin.result.ast.error = AST error: {0}
plugin.result.ast.failed = AST job failed
plugin.result.ast.policy.empty = AST policy not defined
plugin.result.ast.policy.failed = AST policy assessment failed
plugin.result.ast.policy.success = AST policy assessment success
plugin.result.ast.success = AST success
plugin.result.ast.unstable = AST is unstable due to minor errors during scan
plugin.result.ast.warning = AST warning: {0}

validator.check.configName.empty = PT AI global config must be selected
validator.check.field.empty = Value must not be empty
validator.check.jsonPolicy.empty = Success, empty policy used
validator.check.jsonPolicy.invalid = PT AI JSON policy parse failed
validator.check.jsonPolicy.success = Success, policy contains {0} rules
validator.check.jsonSettings.empty = PT AI JSON settings must be set up
validator.check.jsonSettings.invalid = PT AI JSON settings parse failed
validator.check.jsonSettings.success = Success, project name is {0}, language is {1}
validator.check.regex.invalid = Must be a valid Java regular expression
validator.check.serverCaCertificates.empty = PT AI CA certificates are empty. JRE-defined certificates will be used
validator.check.serverCaCertificates.failed = PT AI CA certificates parse error
validator.check.serverCaCertificates.success = Success, trusted certificates are {0}
validator.check.serverCredentialsId.empty = PT AI server credentials must be set up
validator.check.serverUrl.empty = PT AI server URL must be set up
validator.check.serverUrl.invalid = Incorrect PT AI server URL specified
validator.check.token.empty = PT AI client API token must be set up
validator.check.url.invalid = Incorrect URL specified
validator.failed = Failed
validator.test.failed = Failed
validator.test.failed.details = Failed: {0}
validator.test.ptaiProject.notfound = PT AI project not found
validator.test.ptaiProject.success = Success, project ID starts with {0}
validator.test.server.health.empty = Server returned empty components health data
validator.test.server.health.success = Healthy services: {0} out of {1}
validator.test.server.license.empty = Server returned empty license data
validator.test.server.license.success = License: {0}, vaildity period: from {1} to {2}

